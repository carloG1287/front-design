{"ast":null,"code":"var _dec,\n    _class,\n    _jsxFileName = \"C:\\\\Users\\\\carli\\\\OneDrive\\\\Escritorio\\\\Dev\\\\astrid\\\\InteriorDesing\\\\src\\\\Components\\\\AddItems\\\\CardListArch.jsx\";\n\nimport React, { Component } from \"react\";\nimport CardList from \"./CardList.jsx\";\nimport { BASE_URL, MODELS, RESOURCES, GET_FREE_RESOURCES, GET_RESOURCES, FIND, ARCH_CATEGORY } from \"../../Constants.js\";\nimport axios from \"axios\";\nimport { inject, observer } from \"mobx-react\";\nlet CardListArch = (_dec = inject(\"store\"), _dec(_class = observer(_class = class CardListArch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      itemList: []\n    };\n    this.getUserList = this.getUserList.bind(this);\n    this.getFreeList = this.getFreeList.bind(this);\n    this.clearList = this.clearList.bind(this);\n  }\n\n  clearList() {\n    if (this.state.isLoggedIn === false) {\n      this.setState({\n        itemList: []\n      });\n    }\n  }\n\n  getUserList() {\n    if (this.state.isLoggedIn) {\n      let furnitureCategory = {\n        category: ARCH_CATEGORY\n      };\n      let token = this.props.store.obtenerTokenDeAcceso;\n      let config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      axios.post(BASE_URL + RESOURCES + GET_RESOURCES, furnitureCategory, config).then(res => {\n        let itemListTemp = res.data;\n        Promise.all(itemListTemp.map(async modelId => {\n          let res = await axios.get(BASE_URL + MODELS + FIND + modelId);\n          let model = res.data; // Filtra los modelos de Balcony Railing\n\n          if (model.name !== \"Balcony Railing\" && model.name !== \"Balcony Railing 2\") {\n            let temp = [...this.state.itemList];\n            temp.push(model);\n            this.setState({\n              itemList: temp\n            });\n          }\n\n          return model;\n        }));\n      });\n    }\n  }\n\n  getFreeList() {\n    if (!this.state.isLoggedIn) {\n      let furnitureCategory = {\n        category: ARCH_CATEGORY\n      };\n      axios.post(BASE_URL + RESOURCES + GET_FREE_RESOURCES, furnitureCategory).then(res => {\n        let itemListTemp = res.data;\n        Promise.all(itemListTemp.map(async modelId => {\n          let res = await axios.get(BASE_URL + MODELS + FIND + modelId);\n          let model = res.data; // Filtra los modelos de Balcony Railing\n\n          if (model.name !== \"Balcony Railing\" && model.name !== \"Balcony Railing 2\") {\n            let temp = [...this.state.itemList];\n            temp.push(model);\n            this.setState({\n              itemList: temp\n            });\n          }\n\n          return model;\n        }));\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.getFreeList();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapShot) {\n    if (this.props.store.obtenerInicioDeSesion && prevState.isLoggedIn === false) {\n      this.setState({\n        isLoggedIn: true\n      });\n      this.clearList();\n      this.getUserList();\n    }\n\n    if (this.props.store.obtenerInicioDeSesion === false && prevState.isLoggedIn) {\n      this.setState({\n        isLoggedIn: false\n      });\n      this.clearList();\n      this.getFreeList();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardList, {\n      itemList: this.state.itemList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}) || _class) || _class);\nexport default CardListArch;","map":{"version":3,"sources":["C:/Users/carli/OneDrive/Escritorio/Dev/astrid/InteriorDesing/src/Components/AddItems/CardListArch.jsx"],"names":["React","Component","CardList","BASE_URL","MODELS","RESOURCES","GET_FREE_RESOURCES","GET_RESOURCES","FIND","ARCH_CATEGORY","axios","inject","observer","CardListArch","constructor","props","state","isLoggedIn","itemList","getUserList","bind","getFreeList","clearList","setState","furnitureCategory","category","token","store","obtenerTokenDeAcceso","config","headers","Authorization","post","then","res","itemListTemp","data","Promise","all","map","modelId","get","model","name","temp","push","componentDidMount","componentDidUpdate","prevProps","prevState","snapShot","obtenerInicioDeSesion","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport CardList from \"./CardList.jsx\";\r\nimport {\r\n  BASE_URL,\r\n  MODELS,\r\n  RESOURCES,\r\n  GET_FREE_RESOURCES,\r\n  GET_RESOURCES,\r\n  FIND,\r\n  ARCH_CATEGORY,\r\n} from \"../../Constants.js\";\r\nimport axios from \"axios\";\r\nimport { inject, observer } from \"mobx-react\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass CardListArch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoggedIn: false,\r\n      itemList: [],\r\n    };\r\n    this.getUserList = this.getUserList.bind(this);\r\n    this.getFreeList = this.getFreeList.bind(this);\r\n    this.clearList = this.clearList.bind(this);\r\n  }\r\n\r\n  clearList() {\r\n    if (this.state.isLoggedIn === false) {\r\n      this.setState({\r\n        itemList: [],\r\n      });\r\n    }\r\n  }\r\n\r\n  getUserList() {\r\n    if (this.state.isLoggedIn) {\r\n      let furnitureCategory = { category: ARCH_CATEGORY };\r\n      let token = this.props.store.obtenerTokenDeAcceso;\r\n      let config = {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      };\r\n\r\n      axios\r\n        .post(BASE_URL + RESOURCES + GET_RESOURCES, furnitureCategory, config)\r\n        .then((res) => {\r\n          let itemListTemp = res.data;\r\n          Promise.all(\r\n            itemListTemp.map(async (modelId) => {\r\n              let res = await axios.get(BASE_URL + MODELS + FIND + modelId);\r\n              let model = res.data;\r\n\r\n              // Filtra los modelos de Balcony Railing\r\n              if (\r\n                model.name !== \"Balcony Railing\" &&\r\n                model.name !== \"Balcony Railing 2\"\r\n              ) {\r\n                let temp = [...this.state.itemList];\r\n                temp.push(model);\r\n                this.setState({ itemList: temp });\r\n              }\r\n\r\n              return model;\r\n            })\r\n          );\r\n        });\r\n    }\r\n  }\r\n\r\n  getFreeList() {\r\n    if (!this.state.isLoggedIn) {\r\n      let furnitureCategory = { category: ARCH_CATEGORY };\r\n\r\n      axios\r\n        .post(BASE_URL + RESOURCES + GET_FREE_RESOURCES, furnitureCategory)\r\n        .then((res) => {\r\n          let itemListTemp = res.data;\r\n          Promise.all(\r\n            itemListTemp.map(async (modelId) => {\r\n              let res = await axios.get(BASE_URL + MODELS + FIND + modelId);\r\n              let model = res.data;\r\n\r\n              // Filtra los modelos de Balcony Railing\r\n              if (\r\n                model.name !== \"Balcony Railing\" &&\r\n                model.name !== \"Balcony Railing 2\"\r\n              ) {\r\n                let temp = [...this.state.itemList];\r\n                temp.push(model);\r\n                this.setState({ itemList: temp });\r\n              }\r\n\r\n              return model;\r\n            })\r\n          );\r\n        });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getFreeList();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapShot) {\r\n    if (\r\n      this.props.store.obtenerInicioDeSesion &&\r\n      prevState.isLoggedIn === false\r\n    ) {\r\n      this.setState({ isLoggedIn: true });\r\n      this.clearList();\r\n      this.getUserList();\r\n    }\r\n    if (\r\n      this.props.store.obtenerInicioDeSesion === false &&\r\n      prevState.isLoggedIn\r\n    ) {\r\n      this.setState({ isLoggedIn: false });\r\n      this.clearList();\r\n      this.getFreeList();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CardList itemList={this.state.itemList} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardListArch;\r\n"]},"metadata":{},"sourceType":"module"}
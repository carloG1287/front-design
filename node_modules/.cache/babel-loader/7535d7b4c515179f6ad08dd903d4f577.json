{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\carli\\\\OneDrive\\\\Escritorio\\\\Dev\\\\astrid\\\\InteriorDesing\\\\src\\\\Components\\\\LoginLogoutModal\\\\LoginModal\\\\ForgetForm.jsx\";\n\n/* eslint-disable no-undef */\nimport \"../../../App.css\";\nimport React, { Component } from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nimport SmallAlert from \"../../SmallAlert.jsx\";\nimport store from \"../../../InteriorDesignStore.js\";\nlet ForgetForm = (_dec = inject(\"store\"), _dec(_class = observer(_class = (_temp = class ForgetForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLogin = () => {\n      store.cambiarInicioDeSesion(true);\n    };\n\n    this.state = {\n      forgetUsername: \"\",\n      forgetNewPassword: \"\",\n      forgetNewConfirmPassword: \"\",\n      forgetSecurityAnswer: \"\",\n      forgetUsernameFormatError: false,\n      isDisabled: false,\n      securityQuestion: \"\",\n      isEmailExists: true,\n      isPasswordCorrect: true,\n      isError: false,\n      showSmallAlert: false,\n      // Mostrar alerta pequeña\n      alertMessage: \"\",\n      // Mensaje específico de alerta\n      typingTimeout: null\n    };\n    this.handleForgetUsername = this.handleForgetUsername.bind(this);\n    this.handleForgetNewPassword = this.handleForgetNewPassword.bind(this);\n    this.handleForgetNewConfirmPassword = this.handleForgetNewConfirmPassword.bind(this);\n    this.handleForgetSecurityAnswer = this.handleForgetSecurityAnswer.bind(this);\n    this.handleForgetUsername = this.handleForgetUsername.bind(this);\n  }\n\n  async handleForgetUsername(e) {\n    const username = e.target.value;\n    this.setState({\n      forgetUsername: username\n    });\n\n    if (this.state.typingTimeout) {\n      clearTimeout(this.state.typingTimeout);\n    } // Establecer un nuevo timeout para la solicitud después de que el usuario deje de escribir\n\n\n    this.setState({\n      typingTimeout: setTimeout(() => {\n        this.fetchSecurityQuestion(username);\n      }, 500)\n    });\n\n    try {\n      const response = await axios.get(`http://localhost:3000/users/question/${username}`);\n\n      if (response.status === 200 && typeof response.data.question === \"string\") {\n        this.setState({\n          securityQuestion: response.data.question,\n          isDisabled: false,\n          isError: false\n        });\n      } else {\n        this.setState({\n          securityQuestion: \"Pregunta de seguridad no encontrada.\",\n          isDisabled: true,\n          isError: true\n        });\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        this.setState({\n          isError: true,\n          alertMessage: \"Usuario no encontrado.\",\n          showSmallAlert: true\n        });\n      }\n    }\n  }\n\n  handleForgetNewPassword(e) {\n    this.setState({\n      forgetNewPassword: e.target.value\n    });\n  }\n\n  handleForgetNewConfirmPassword(e) {\n    this.setState({\n      forgetNewConfirmPassword: e.target.value\n    });\n  }\n\n  handleForgetSecurityAnswer(e) {\n    this.setState({\n      forgetSecurityAnswer: e.target.value\n    });\n  }\n\n  async handleChangePassword(e) {\n    e.preventDefault();\n    const {\n      forgetUsername,\n      forgetNewPassword,\n      forgetNewConfirmPassword,\n      forgetSecurityAnswer\n    } = this.state;\n\n    if (forgetNewPassword !== forgetNewConfirmPassword) {\n      this.setState({\n        showSmallAlert: true,\n        alertMessage: \"Las contraseñas no coinciden.\"\n      });\n      return;\n    }\n\n    if (forgetUsername && forgetNewPassword && forgetSecurityAnswer) {\n      const body = {\n        security_answer: forgetSecurityAnswer,\n        password: forgetNewPassword\n      };\n\n      try {\n        const response = await axios.put(`http://localhost:3000/users/change_password/${forgetUsername}`, body);\n\n        if (response.status === 200) {\n          this.setState({\n            showSmallAlert: false\n          });\n          window.location.pathname = \"/inicio-sesion\";\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 400 && error.response.data.message === \"Same password\") {\n          this.setState({\n            showSmallAlert: true,\n            alertMessage: \"La nueva contraseña no puede ser igual a la anterior.\"\n          });\n        } else if (error.response && error.response.status === 400 && error.response.data.message === \"Incorrect security answer\") {\n          this.setState({\n            showSmallAlert: true,\n            alertMessage: \"La respuesta de seguridad es incorrecta.\"\n          });\n        } else if (error.response && error.response.status === 404) {\n          this.setState({\n            showSmallAlert: true,\n            alertMessage: \"Usuario no encontrado.\"\n          });\n        } else {\n          this.setState({\n            showSmallAlert: true,\n            alertMessage: \"Ha ocurrido un problema.\"\n          });\n        }\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vertical-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"login-form\",\n      onSubmit: e => {\n        this.handleChangePassword(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }, this.state.forgetUsernameFormatError && /*#__PURE__*/React.createElement(SmallAlert, {\n      message: \"Usuario inv\\xE1lido\",\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form-input-space\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Usuario\",\n      variant: \"secondary\",\n      type: \"text\",\n      value: this.state.forgetUsername,\n      onChange: e => {\n        this.handleForgetUsername(e);\n      },\n      className: \"login-form-input\",\n      disabled: this.state.isDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form-input-space\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Nueva contrase\\xF1a\",\n      variant: \"secondary\",\n      size: \"sm\",\n      type: \"password\",\n      value: this.state.forgetNewPassword,\n      onChange: e => {\n        this.handleForgetNewPassword(e);\n      },\n      className: \"login-form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form-input-space\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Confirmar nueva contrase\\xF1a\",\n      variant: \"secondary\",\n      size: \"sm\",\n      type: \"password\",\n      value: this.state.forgetNewConfirmPassword,\n      onChange: e => {\n        this.handleForgetNewConfirmPassword(e);\n      },\n      className: \"login-form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    })), this.state.securityQuestion && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"security-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }\n    }, this.state.securityQuestion)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form-input-space\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Respuesta de seguridad\",\n      variant: \"secondary\",\n      size: \"sm\",\n      type: \"text\",\n      value: this.state.forgetSecurityAnswer,\n      onChange: e => {\n        this.handleForgetSecurityAnswer(e);\n      },\n      className: \"login-form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      className: \"login-submit-button\",\n      disabled: this.state.isDisabled,\n      type: \"submit\",\n      style: {\n        marginBottom: \"-10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, \"Cambiar contrase\\xF1a\")), this.state.showSmallAlert && /*#__PURE__*/React.createElement(SmallAlert, {\n      message: this.state.alertMessage,\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}, _temp)) || _class) || _class);\nexport default ForgetForm;","map":{"version":3,"sources":["C:/Users/carli/OneDrive/Escritorio/Dev/astrid/InteriorDesing/src/Components/LoginLogoutModal/LoginModal/ForgetForm.jsx"],"names":["React","Component","inject","observer","Button","axios","SmallAlert","store","ForgetForm","constructor","props","handleLogin","cambiarInicioDeSesion","state","forgetUsername","forgetNewPassword","forgetNewConfirmPassword","forgetSecurityAnswer","forgetUsernameFormatError","isDisabled","securityQuestion","isEmailExists","isPasswordCorrect","isError","showSmallAlert","alertMessage","typingTimeout","handleForgetUsername","bind","handleForgetNewPassword","handleForgetNewConfirmPassword","handleForgetSecurityAnswer","e","username","target","value","setState","clearTimeout","setTimeout","fetchSecurityQuestion","response","get","status","data","question","error","handleChangePassword","preventDefault","body","security_answer","password","put","window","location","pathname","message","render","textAlign","marginTop","marginBottom"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\r\nimport \"../../../App.css\";\r\nimport React, { Component } from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport SmallAlert from \"../../SmallAlert.jsx\";\r\nimport store from \"../../../InteriorDesignStore.js\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass ForgetForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      forgetUsername: \"\",\r\n      forgetNewPassword: \"\",\r\n      forgetNewConfirmPassword: \"\",\r\n      forgetSecurityAnswer: \"\",\r\n      forgetUsernameFormatError: false,\r\n\r\n      isDisabled: false,\r\n      securityQuestion: \"\",\r\n      isEmailExists: true,\r\n      isPasswordCorrect: true,\r\n      isError: false,\r\n      showSmallAlert: false, // Mostrar alerta pequeña\r\n      alertMessage: \"\", // Mensaje específico de alerta\r\n      typingTimeout: null,\r\n    };\r\n\r\n    this.handleForgetUsername = this.handleForgetUsername.bind(this);\r\n    this.handleForgetNewPassword = this.handleForgetNewPassword.bind(this);\r\n    this.handleForgetNewConfirmPassword =\r\n      this.handleForgetNewConfirmPassword.bind(this);\r\n    this.handleForgetSecurityAnswer =\r\n      this.handleForgetSecurityAnswer.bind(this);\r\n    this.handleForgetUsername = this.handleForgetUsername.bind(this);\r\n  }\r\n\r\n  async handleForgetUsername(e) {\r\n    const username = e.target.value;\r\n    this.setState({ forgetUsername: username });\r\n\r\n    if (this.state.typingTimeout) {\r\n      clearTimeout(this.state.typingTimeout);\r\n    }\r\n\r\n    // Establecer un nuevo timeout para la solicitud después de que el usuario deje de escribir\r\n    this.setState({\r\n      typingTimeout: setTimeout(() => {\r\n        this.fetchSecurityQuestion(username);\r\n      }, 500),\r\n    });\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3000/users/question/${username}`\r\n      );\r\n\r\n      if (\r\n        response.status === 200 &&\r\n        typeof response.data.question === \"string\"\r\n      ) {\r\n        this.setState({\r\n          securityQuestion: response.data.question,\r\n          isDisabled: false,\r\n          isError: false,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          securityQuestion: \"Pregunta de seguridad no encontrada.\",\r\n          isDisabled: true,\r\n          isError: true,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 404) {\r\n        this.setState({\r\n          isError: true,\r\n          alertMessage: \"Usuario no encontrado.\",\r\n          showSmallAlert: true,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleForgetNewPassword(e) {\r\n    this.setState({ forgetNewPassword: e.target.value });\r\n  }\r\n\r\n  handleForgetNewConfirmPassword(e) {\r\n    this.setState({ forgetNewConfirmPassword: e.target.value });\r\n  }\r\n\r\n  handleForgetSecurityAnswer(e) {\r\n    this.setState({ forgetSecurityAnswer: e.target.value });\r\n  }\r\n\r\n  handleLogin = () => {\r\n    store.cambiarInicioDeSesion(true);\r\n  };\r\n\r\n  async handleChangePassword(e) {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      forgetUsername,\r\n      forgetNewPassword,\r\n      forgetNewConfirmPassword,\r\n      forgetSecurityAnswer,\r\n    } = this.state;\r\n\r\n    if (forgetNewPassword !== forgetNewConfirmPassword) {\r\n      this.setState({\r\n        showSmallAlert: true,\r\n        alertMessage: \"Las contraseñas no coinciden.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (forgetUsername && forgetNewPassword && forgetSecurityAnswer) {\r\n      const body = {\r\n        security_answer: forgetSecurityAnswer,\r\n        password: forgetNewPassword,\r\n      };\r\n\r\n      try {\r\n        const response = await axios.put(\r\n          `http://localhost:3000/users/change_password/${forgetUsername}`,\r\n          body\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          this.setState({ showSmallAlert: false });\r\n          window.location.pathname = \"/inicio-sesion\";\r\n        }\r\n      } catch (error) {\r\n        if (\r\n          error.response &&\r\n          error.response.status === 400 &&\r\n          error.response.data.message === \"Same password\"\r\n        ) {\r\n          this.setState({\r\n            showSmallAlert: true,\r\n            alertMessage:\r\n              \"La nueva contraseña no puede ser igual a la anterior.\",\r\n          });\r\n        } else if (\r\n          error.response &&\r\n          error.response.status === 400 &&\r\n          error.response.data.message === \"Incorrect security answer\"\r\n        ) {\r\n          this.setState({\r\n            showSmallAlert: true,\r\n            alertMessage: \"La respuesta de seguridad es incorrecta.\",\r\n          });\r\n        } else if (error.response && error.response.status === 404) {\r\n          this.setState({\r\n            showSmallAlert: true,\r\n            alertMessage: \"Usuario no encontrado.\",\r\n          });\r\n        } else {\r\n          this.setState({\r\n            showSmallAlert: true,\r\n            alertMessage: \"Ha ocurrido un problema.\",\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"vertical-container\">\r\n        <form\r\n          className=\"login-form\"\r\n          onSubmit={(e) => {\r\n            this.handleChangePassword(e);\r\n          }}\r\n        >\r\n          {this.state.forgetUsernameFormatError && (\r\n            <SmallAlert message=\"Usuario inválido\" variant=\"info\" />\r\n          )}\r\n          <div className=\"login-form-input-space\">\r\n            <input\r\n              placeholder=\"Usuario\"\r\n              variant=\"secondary\"\r\n              type=\"text\"\r\n              value={this.state.forgetUsername}\r\n              onChange={(e) => {\r\n                this.handleForgetUsername(e);\r\n              }}\r\n              className=\"login-form-input\"\r\n              disabled={this.state.isDisabled}\r\n            />\r\n          </div>\r\n          <div className=\"login-form-input-space\">\r\n            <input\r\n              placeholder=\"Nueva contraseña\"\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              type=\"password\"\r\n              value={this.state.forgetNewPassword}\r\n              onChange={(e) => {\r\n                this.handleForgetNewPassword(e);\r\n              }}\r\n              className=\"login-form-input\"\r\n            />\r\n          </div>\r\n          <div className=\"login-form-input-space\">\r\n            <input\r\n              placeholder=\"Confirmar nueva contraseña\"\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              type=\"password\"\r\n              value={this.state.forgetNewConfirmPassword}\r\n              onChange={(e) => {\r\n                this.handleForgetNewConfirmPassword(e);\r\n              }}\r\n              className=\"login-form-input\"\r\n            />\r\n          </div>\r\n          {this.state.securityQuestion && (\r\n            <div className=\"security-question\">\r\n              <p style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n                {this.state.securityQuestion}\r\n              </p>\r\n            </div>\r\n          )}\r\n          <div className=\"login-form-input-space\">\r\n            <input\r\n              placeholder=\"Respuesta de seguridad\"\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              type=\"text\"\r\n              value={this.state.forgetSecurityAnswer}\r\n              onChange={(e) => {\r\n                this.handleForgetSecurityAnswer(e);\r\n              }}\r\n              className=\"login-form-input\"\r\n            />\r\n          </div>\r\n          <Button\r\n            variant=\"info\"\r\n            className=\"login-submit-button\"\r\n            disabled={this.state.isDisabled}\r\n            type=\"submit\"\r\n            style={{ marginBottom: \"-10px\" }}\r\n          >\r\n            Cambiar contraseña\r\n          </Button>\r\n        </form>\r\n\r\n        {this.state.showSmallAlert && (\r\n          <SmallAlert message={this.state.alertMessage} variant=\"danger\" />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgetForm;\r\n"]},"metadata":{},"sourceType":"module"}
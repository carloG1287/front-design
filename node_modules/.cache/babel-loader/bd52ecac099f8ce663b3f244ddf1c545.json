{"ast":null,"code":"export function validateEmail(email) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email));\n}\nexport function validatePassword(password) {\n  const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n  return re.test(String(password));\n}\nexport function validateUsername(name) {\n  return name.length < 1 ? false : true;\n}\nexport function parseJwt(token) {\n  if (!token) {\n    return;\n  }\n\n  const base64Url = token.split('.')[1];\n  const base64 = base64Url.replace('-', '+').replace('_', '/');\n  return JSON.parse(atob(base64));\n}","map":{"version":3,"sources":["C:/Users/carli/OneDrive/Escritorio/Dev/astrid/InteriorDesing/src/Utils/Utils.js"],"names":["validateEmail","email","re","test","String","validatePassword","password","validateUsername","name","length","parseJwt","token","base64Url","split","base64","replace","JSON","parse","atob"],"mappings":"AAAA,OAAO,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AACjC,QAAMC,EAAE,GAAG,uJAAX;AACA,SAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACH,KAAD,CAAd,CAAP;AACH;AAED,OAAO,SAASI,gBAAT,CAA0BC,QAA1B,EAAoC;AACvC,QAAMJ,EAAE,GAAG,sEAAX;AACA,SAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACE,QAAD,CAAd,CAAP;AACH;AAED,OAAO,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AACnC,SAAOA,IAAI,CAACC,MAAL,GAAc,CAAd,GAAkB,KAAlB,GAA0B,IAAjC;AACH;AAED,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC5B,MAAI,CAACA,KAAL,EAAY;AACR;AACH;;AACD,QAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAlB;AACA,QAAMC,MAAM,GAAGF,SAAS,CAACG,OAAV,CAAkB,GAAlB,EAAuB,GAAvB,EAA4BA,OAA5B,CAAoC,GAApC,EAAyC,GAAzC,CAAf;AACA,SAAOC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACJ,MAAD,CAAf,CAAP;AACH","sourcesContent":["export function validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email));\r\n}\r\n\r\nexport function validatePassword(password) {\r\n    const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/\r\n    return re.test(String(password));\r\n}\r\n\r\nexport function validateUsername(name) {\r\n    return name.length < 1 ? false : true\r\n}\r\n\r\nexport function parseJwt(token) {\r\n    if (!token) {\r\n        return;\r\n    }\r\n    const base64Url = token.split('.')[1];\r\n    const base64 = base64Url.replace('-', '+').replace('_', '/');\r\n    return JSON.parse(atob(base64));\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\n\nvar wk = function (c, id, msg, transfer, cb) {\n  var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'], {\n    type: 'text/javascript'\n  }))));\n\n  w.onmessage = function (e) {\n    var d = e.data,\n        ed = d.$e$;\n\n    if (ed) {\n      var err = new Error(ed[0]);\n      err['code'] = ed[1];\n      err.stack = ed[2];\n      cb(err, null);\n    } else cb(null, d);\n  };\n\n  w.postMessage(msg, transfer);\n  return w;\n}; // aliases for shorter compressed code (most minifers don't do this)\n\n\nvar u8 = Uint8Array,\n    u16 = Uint16Array,\n    i32 = Int32Array; // fixed length extra bits\n\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0,\n/* unused */\n0, 0,\n/* impossible */\n0]); // fixed distance extra bits\n\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13,\n/* unused */\n0, 0]); // code length index map\n\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]); // get base, reverse index map from extra bits\n\nvar freb = function (eb, start) {\n  var b = new u16(31);\n\n  for (var i = 0; i < 31; ++i) {\n    b[i] = start += 1 << eb[i - 1];\n  } // numbers here are at max 18 bits\n\n\n  var r = new i32(b[30]);\n\n  for (var i = 1; i < 30; ++i) {\n    for (var j = b[i]; j < b[i + 1]; ++j) {\n      r[j] = j - b[i] << 5 | i;\n    }\n  }\n\n  return {\n    b: b,\n    r: r\n  };\n};\n\nvar _a = freb(fleb, 2),\n    fl = _a.b,\n    revfl = _a.r; // we can ignore the fact that the other numbers are wrong; they never happen anyway\n\n\nfl[28] = 258, revfl[258] = 28;\n\nvar _b = freb(fdeb, 0),\n    fd = _b.b,\n    revfd = _b.r; // map of value to reverse (assuming 16 bits)\n\n\nvar rev = new u16(32768);\n\nfor (var i = 0; i < 32768; ++i) {\n  // reverse table algorithm from SO\n  var x = (i & 0xAAAA) >> 1 | (i & 0x5555) << 1;\n  x = (x & 0xCCCC) >> 2 | (x & 0x3333) << 2;\n  x = (x & 0xF0F0) >> 4 | (x & 0x0F0F) << 4;\n  rev[i] = ((x & 0xFF00) >> 8 | (x & 0x00FF) << 8) >> 1;\n} // create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\n\n\nvar hMap = function (cd, mb, r) {\n  var s = cd.length; // index\n\n  var i = 0; // u16 \"map\": index -> # of codes with bit length = index\n\n  var l = new u16(mb); // length of cd must be 288 (total # of codes)\n\n  for (; i < s; ++i) {\n    if (cd[i]) ++l[cd[i] - 1];\n  } // u16 \"map\": index -> minimum code for bit length = index\n\n\n  var le = new u16(mb);\n\n  for (i = 1; i < mb; ++i) {\n    le[i] = le[i - 1] + l[i - 1] << 1;\n  }\n\n  var co;\n\n  if (r) {\n    // u16 \"map\": index -> number of actual bits, symbol for code\n    co = new u16(1 << mb); // bits to remove for reverser\n\n    var rvb = 15 - mb;\n\n    for (i = 0; i < s; ++i) {\n      // ignore 0 lengths\n      if (cd[i]) {\n        // num encoding both symbol and bits read\n        var sv = i << 4 | cd[i]; // free bits\n\n        var r_1 = mb - cd[i]; // start value\n\n        var v = le[cd[i] - 1]++ << r_1; // m is end value\n\n        for (var m = v | (1 << r_1) - 1; v <= m; ++v) {\n          // every 16 bit value starting with the code yields the same result\n          co[rev[v] >> rvb] = sv;\n        }\n      }\n    }\n  } else {\n    co = new u16(s);\n\n    for (i = 0; i < s; ++i) {\n      if (cd[i]) {\n        co[i] = rev[le[cd[i] - 1]++] >> 15 - cd[i];\n      }\n    }\n  }\n\n  return co;\n}; // fixed length tree\n\n\nvar flt = new u8(288);\n\nfor (var i = 0; i < 144; ++i) flt[i] = 8;\n\nfor (var i = 144; i < 256; ++i) flt[i] = 9;\n\nfor (var i = 256; i < 280; ++i) flt[i] = 7;\n\nfor (var i = 280; i < 288; ++i) flt[i] = 8; // fixed distance tree\n\n\nvar fdt = new u8(32);\n\nfor (var i = 0; i < 32; ++i) fdt[i] = 5; // fixed length map\n\n\nvar flm = /*#__PURE__*/hMap(flt, 9, 0),\n    flrm = /*#__PURE__*/hMap(flt, 9, 1); // fixed distance map\n\nvar fdm = /*#__PURE__*/hMap(fdt, 5, 0),\n    fdrm = /*#__PURE__*/hMap(fdt, 5, 1); // find max of array\n\nvar max = function (a) {\n  var m = a[0];\n\n  for (var i = 1; i < a.length; ++i) {\n    if (a[i] > m) m = a[i];\n  }\n\n  return m;\n}; // read d, starting at bit p and mask with m\n\n\nvar bits = function (d, p, m) {\n  var o = p / 8 | 0;\n  return (d[o] | d[o + 1] << 8) >> (p & 7) & m;\n}; // read d, starting at bit p continuing for at least 16 bits\n\n\nvar bits16 = function (d, p) {\n  var o = p / 8 | 0;\n  return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >> (p & 7);\n}; // get end of byte\n\n\nvar shft = function (p) {\n  return (p + 7) / 8 | 0;\n}; // typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\n\n\nvar slc = function (v, s, e) {\n  if (s == null || s < 0) s = 0;\n  if (e == null || e > v.length) e = v.length; // can't use .constructor in case user-supplied\n\n  return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\n\n\nexport var FlateErrorCode = {\n  UnexpectedEOF: 0,\n  InvalidBlockType: 1,\n  InvalidLengthLiteral: 2,\n  InvalidDistance: 3,\n  StreamFinished: 4,\n  NoStreamHandler: 5,\n  InvalidHeader: 6,\n  NoCallback: 7,\n  InvalidUTF8: 8,\n  ExtraFieldTooLong: 9,\n  InvalidDate: 10,\n  FilenameTooLong: 11,\n  StreamFinishing: 12,\n  InvalidZipData: 13,\n  UnknownCompressionMethod: 14\n}; // error codes\n\nvar ec = ['unexpected EOF', 'invalid block type', 'invalid length/literal', 'invalid distance', 'stream finished', 'no stream handler',, 'no callback', 'invalid UTF-8 data', 'extra field too long', 'date not in range 1980-2099', 'filename too long', 'stream finishing', 'invalid zip data' // determined by unknown compression method\n];\n;\n\nvar err = function (ind, msg, nt) {\n  var e = new Error(msg || ec[ind]);\n  e.code = ind;\n  if (Error.captureStackTrace) Error.captureStackTrace(e, err);\n  if (!nt) throw e;\n  return e;\n}; // expands raw DEFLATE data\n\n\nvar inflt = function (dat, st, buf, dict) {\n  // source length       dict length\n  var sl = dat.length,\n      dl = dict ? dict.length : 0;\n  if (!sl || st.f && !st.l) return buf || new u8(0);\n  var noBuf = !buf; // have to estimate size\n\n  var resize = noBuf || st.i != 2; // no state\n\n  var noSt = st.i; // Assumes roughly 33% compression ratio average\n\n  if (noBuf) buf = new u8(sl * 3); // ensure buffer can fit at least l elements\n\n  var cbuf = function (l) {\n    var bl = buf.length; // need to increase size to fit\n\n    if (l > bl) {\n      // Double or set to necessary, whichever is greater\n      var nbuf = new u8(Math.max(bl * 2, l));\n      nbuf.set(buf);\n      buf = nbuf;\n    }\n  }; //  last chunk         bitpos           bytes\n\n\n  var final = st.f || 0,\n      pos = st.p || 0,\n      bt = st.b || 0,\n      lm = st.l,\n      dm = st.d,\n      lbt = st.m,\n      dbt = st.n; // total bits\n\n  var tbts = sl * 8;\n\n  do {\n    if (!lm) {\n      // BFINAL - this is only 1 when last chunk is next\n      final = bits(dat, pos, 1); // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n\n      var type = bits(dat, pos + 1, 3);\n      pos += 3;\n\n      if (!type) {\n        // go to end of byte boundary\n        var s = shft(pos) + 4,\n            l = dat[s - 4] | dat[s - 3] << 8,\n            t = s + l;\n\n        if (t > sl) {\n          if (noSt) err(0);\n          break;\n        } // ensure size\n\n\n        if (resize) cbuf(bt + l); // Copy over uncompressed data\n\n        buf.set(dat.subarray(s, t), bt); // Get new bitpos, update byte count\n\n        st.b = bt += l, st.p = pos = t * 8, st.f = final;\n        continue;\n      } else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;else if (type == 2) {\n        //  literal                            lengths\n        var hLit = bits(dat, pos, 31) + 257,\n            hcLen = bits(dat, pos + 10, 15) + 4;\n        var tl = hLit + bits(dat, pos + 5, 31) + 1;\n        pos += 14; // length+distance tree\n\n        var ldt = new u8(tl); // code length tree\n\n        var clt = new u8(19);\n\n        for (var i = 0; i < hcLen; ++i) {\n          // use index map to get real code\n          clt[clim[i]] = bits(dat, pos + i * 3, 7);\n        }\n\n        pos += hcLen * 3; // code lengths bits\n\n        var clb = max(clt),\n            clbmsk = (1 << clb) - 1; // code lengths map\n\n        var clm = hMap(clt, clb, 1);\n\n        for (var i = 0; i < tl;) {\n          var r = clm[bits(dat, pos, clbmsk)]; // bits read\n\n          pos += r & 15; // symbol\n\n          var s = r >> 4; // code length to copy\n\n          if (s < 16) {\n            ldt[i++] = s;\n          } else {\n            //  copy   count\n            var c = 0,\n                n = 0;\n            if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;\n\n            while (n--) ldt[i++] = c;\n          }\n        } //    length tree                 distance tree\n\n\n        var lt = ldt.subarray(0, hLit),\n            dt = ldt.subarray(hLit); // max length bits\n\n        lbt = max(lt); // max dist bits\n\n        dbt = max(dt);\n        lm = hMap(lt, lbt, 1);\n        dm = hMap(dt, dbt, 1);\n      } else err(1);\n\n      if (pos > tbts) {\n        if (noSt) err(0);\n        break;\n      }\n    } // Make sure the buffer can hold this + the largest possible addition\n    // Maximum chunk size (practically, theoretically infinite) is 2^17\n\n\n    if (resize) cbuf(bt + 131072);\n    var lms = (1 << lbt) - 1,\n        dms = (1 << dbt) - 1;\n    var lpos = pos;\n\n    for (;; lpos = pos) {\n      // bits read, code\n      var c = lm[bits16(dat, pos) & lms],\n          sym = c >> 4;\n      pos += c & 15;\n\n      if (pos > tbts) {\n        if (noSt) err(0);\n        break;\n      }\n\n      if (!c) err(2);\n      if (sym < 256) buf[bt++] = sym;else if (sym == 256) {\n        lpos = pos, lm = null;\n        break;\n      } else {\n        var add = sym - 254; // no extra bits needed if less\n\n        if (sym > 264) {\n          // index\n          var i = sym - 257,\n              b = fleb[i];\n          add = bits(dat, pos, (1 << b) - 1) + fl[i];\n          pos += b;\n        } // dist\n\n\n        var d = dm[bits16(dat, pos) & dms],\n            dsym = d >> 4;\n        if (!d) err(3);\n        pos += d & 15;\n        var dt = fd[dsym];\n\n        if (dsym > 3) {\n          var b = fdeb[dsym];\n          dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n        }\n\n        if (pos > tbts) {\n          if (noSt) err(0);\n          break;\n        }\n\n        if (resize) cbuf(bt + 131072);\n        var end = bt + add;\n\n        if (bt < dt) {\n          var shift = dl - dt,\n              dend = Math.min(dt, end);\n          if (shift + bt < 0) err(3);\n\n          for (; bt < dend; ++bt) buf[bt] = dict[shift + bt];\n        }\n\n        for (; bt < end; ++bt) buf[bt] = buf[bt - dt];\n      }\n    }\n\n    st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n    if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n  } while (!final); // don't reallocate for streams or user buffers\n\n\n  return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n}; // starting at p, write the minimum number of bits that can hold v to d\n\n\nvar wbits = function (d, p, v) {\n  v <<= p & 7;\n  var o = p / 8 | 0;\n  d[o] |= v;\n  d[o + 1] |= v >> 8;\n}; // starting at p, write the minimum number of bits (>8) that can hold v to d\n\n\nvar wbits16 = function (d, p, v) {\n  v <<= p & 7;\n  var o = p / 8 | 0;\n  d[o] |= v;\n  d[o + 1] |= v >> 8;\n  d[o + 2] |= v >> 16;\n}; // creates code lengths from a frequency table\n\n\nvar hTree = function (d, mb) {\n  // Need extra info to make a tree\n  var t = [];\n\n  for (var i = 0; i < d.length; ++i) {\n    if (d[i]) t.push({\n      s: i,\n      f: d[i]\n    });\n  }\n\n  var s = t.length;\n  var t2 = t.slice();\n  if (!s) return {\n    t: et,\n    l: 0\n  };\n\n  if (s == 1) {\n    var v = new u8(t[0].s + 1);\n    v[t[0].s] = 1;\n    return {\n      t: v,\n      l: 1\n    };\n  }\n\n  t.sort(function (a, b) {\n    return a.f - b.f;\n  }); // after i2 reaches last ind, will be stopped\n  // freq must be greater than largest possible number of symbols\n\n  t.push({\n    s: -1,\n    f: 25001\n  });\n  var l = t[0],\n      r = t[1],\n      i0 = 0,\n      i1 = 1,\n      i2 = 2;\n  t[0] = {\n    s: -1,\n    f: l.f + r.f,\n    l: l,\n    r: r\n  }; // efficient algorithm from UZIP.js\n  // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n  // symbols that combined have high freq, will start processing i2 (high-freq,\n  // non-composite) symbols instead\n  // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n\n  while (i1 != s - 1) {\n    l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n    r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n    t[i1++] = {\n      s: -1,\n      f: l.f + r.f,\n      l: l,\n      r: r\n    };\n  }\n\n  var maxSym = t2[0].s;\n\n  for (var i = 1; i < s; ++i) {\n    if (t2[i].s > maxSym) maxSym = t2[i].s;\n  } // code lengths\n\n\n  var tr = new u16(maxSym + 1); // max bits in tree\n\n  var mbt = ln(t[i1 - 1], tr, 0);\n\n  if (mbt > mb) {\n    // more algorithms from UZIP.js\n    // TODO: find out how this code works (debt)\n    //  ind    debt\n    var i = 0,\n        dt = 0; //    left            cost\n\n    var lft = mbt - mb,\n        cst = 1 << lft;\n    t2.sort(function (a, b) {\n      return tr[b.s] - tr[a.s] || a.f - b.f;\n    });\n\n    for (; i < s; ++i) {\n      var i2_1 = t2[i].s;\n\n      if (tr[i2_1] > mb) {\n        dt += cst - (1 << mbt - tr[i2_1]);\n        tr[i2_1] = mb;\n      } else break;\n    }\n\n    dt >>= lft;\n\n    while (dt > 0) {\n      var i2_2 = t2[i].s;\n      if (tr[i2_2] < mb) dt -= 1 << mb - tr[i2_2]++ - 1;else ++i;\n    }\n\n    for (; i >= 0 && dt; --i) {\n      var i2_3 = t2[i].s;\n\n      if (tr[i2_3] == mb) {\n        --tr[i2_3];\n        ++dt;\n      }\n    }\n\n    mbt = mb;\n  }\n\n  return {\n    t: new u8(tr),\n    l: mbt\n  };\n}; // get the max length and assign length codes\n\n\nvar ln = function (n, l, d) {\n  return n.s == -1 ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1)) : l[n.s] = d;\n}; // length codes generation\n\n\nvar lc = function (c) {\n  var s = c.length; // Note that the semicolon was intentional\n\n  while (s && !c[--s]);\n\n  var cl = new u16(++s); //  ind      num         streak\n\n  var cli = 0,\n      cln = c[0],\n      cls = 1;\n\n  var w = function (v) {\n    cl[cli++] = v;\n  };\n\n  for (var i = 1; i <= s; ++i) {\n    if (c[i] == cln && i != s) ++cls;else {\n      if (!cln && cls > 2) {\n        for (; cls > 138; cls -= 138) w(32754);\n\n        if (cls > 2) {\n          w(cls > 10 ? cls - 11 << 5 | 28690 : cls - 3 << 5 | 12305);\n          cls = 0;\n        }\n      } else if (cls > 3) {\n        w(cln), --cls;\n\n        for (; cls > 6; cls -= 6) w(8304);\n\n        if (cls > 2) w(cls - 3 << 5 | 8208), cls = 0;\n      }\n\n      while (cls--) w(cln);\n\n      cls = 1;\n      cln = c[i];\n    }\n  }\n\n  return {\n    c: cl.subarray(0, cli),\n    n: s\n  };\n}; // calculate the length of output from tree, code lengths\n\n\nvar clen = function (cf, cl) {\n  var l = 0;\n\n  for (var i = 0; i < cl.length; ++i) l += cf[i] * cl[i];\n\n  return l;\n}; // writes a fixed block\n// returns the new bit pos\n\n\nvar wfblk = function (out, pos, dat) {\n  // no need to write 00 as type: TypedArray defaults to 0\n  var s = dat.length;\n  var o = shft(pos + 2);\n  out[o] = s & 255;\n  out[o + 1] = s >> 8;\n  out[o + 2] = out[o] ^ 255;\n  out[o + 3] = out[o + 1] ^ 255;\n\n  for (var i = 0; i < s; ++i) out[o + i + 4] = dat[i];\n\n  return (o + 4 + s) * 8;\n}; // writes a block\n\n\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n  wbits(out, p++, final);\n  ++lf[256];\n\n  var _a = hTree(lf, 15),\n      dlt = _a.t,\n      mlb = _a.l;\n\n  var _b = hTree(df, 15),\n      ddt = _b.t,\n      mdb = _b.l;\n\n  var _c = lc(dlt),\n      lclt = _c.c,\n      nlc = _c.n;\n\n  var _d = lc(ddt),\n      lcdt = _d.c,\n      ndc = _d.n;\n\n  var lcfreq = new u16(19);\n\n  for (var i = 0; i < lclt.length; ++i) ++lcfreq[lclt[i] & 31];\n\n  for (var i = 0; i < lcdt.length; ++i) ++lcfreq[lcdt[i] & 31];\n\n  var _e = hTree(lcfreq, 7),\n      lct = _e.t,\n      mlcb = _e.l;\n\n  var nlcc = 19;\n\n  for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc);\n\n  var flen = bl + 5 << 3;\n  var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n  var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n  if (bs >= 0 && flen <= ftlen && flen <= dtlen) return wfblk(out, p, dat.subarray(bs, bs + bl));\n  var lm, ll, dm, dl;\n  wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n\n  if (dtlen < ftlen) {\n    lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n    var llm = hMap(lct, mlcb, 0);\n    wbits(out, p, nlc - 257);\n    wbits(out, p + 5, ndc - 1);\n    wbits(out, p + 10, nlcc - 4);\n    p += 14;\n\n    for (var i = 0; i < nlcc; ++i) wbits(out, p + 3 * i, lct[clim[i]]);\n\n    p += 3 * nlcc;\n    var lcts = [lclt, lcdt];\n\n    for (var it = 0; it < 2; ++it) {\n      var clct = lcts[it];\n\n      for (var i = 0; i < clct.length; ++i) {\n        var len = clct[i] & 31;\n        wbits(out, p, llm[len]), p += lct[len];\n        if (len > 15) wbits(out, p, clct[i] >> 5 & 127), p += clct[i] >> 12;\n      }\n    }\n  } else {\n    lm = flm, ll = flt, dm = fdm, dl = fdt;\n  }\n\n  for (var i = 0; i < li; ++i) {\n    var sym = syms[i];\n\n    if (sym > 255) {\n      var len = sym >> 18 & 31;\n      wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n      if (len > 7) wbits(out, p, sym >> 23 & 31), p += fleb[len];\n      var dst = sym & 31;\n      wbits16(out, p, dm[dst]), p += dl[dst];\n      if (dst > 3) wbits16(out, p, sym >> 5 & 8191), p += fdeb[dst];\n    } else {\n      wbits16(out, p, lm[sym]), p += ll[sym];\n    }\n  }\n\n  wbits16(out, p, lm[256]);\n  return p + ll[256];\n}; // deflate options (nice << 13) | chain\n\n\nvar deo = /*#__PURE__*/new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]); // empty\n\nvar et = /*#__PURE__*/new u8(0); // compresses data into a raw DEFLATE buffer\n\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n  var s = st.z || dat.length;\n  var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post); // writing to this writes to the output buffer\n\n  var w = o.subarray(pre, o.length - post);\n  var lst = st.l;\n  var pos = (st.r || 0) & 7;\n\n  if (lvl) {\n    if (pos) w[0] = st.r >> 3;\n    var opt = deo[lvl - 1];\n    var n = opt >> 13,\n        c = opt & 8191;\n    var msk_1 = (1 << plvl) - 1; //    prev 2-byte val map    curr 2-byte val map\n\n    var prev = st.p || new u16(32768),\n        head = st.h || new u16(msk_1 + 1);\n    var bs1_1 = Math.ceil(plvl / 3),\n        bs2_1 = 2 * bs1_1;\n\n    var hsh = function (i) {\n      return (dat[i] ^ dat[i + 1] << bs1_1 ^ dat[i + 2] << bs2_1) & msk_1;\n    }; // 24576 is an arbitrary number of maximum symbols per block\n    // 424 buffer for last block\n\n\n    var syms = new i32(25000); // length/literal freq   distance freq\n\n    var lf = new u16(288),\n        df = new u16(32); //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n\n    var lc_1 = 0,\n        eb = 0,\n        i = st.i || 0,\n        li = 0,\n        wi = st.w || 0,\n        bs = 0;\n\n    for (; i + 2 < s; ++i) {\n      // hash value\n      var hv = hsh(i); // index mod 32768    previous index mod\n\n      var imod = i & 32767,\n          pimod = head[hv];\n      prev[imod] = pimod;\n      head[hv] = imod; // We always should modify head and prev, but only add symbols if\n      // this data is not yet processed (\"wait\" for wait index)\n\n      if (wi <= i) {\n        // bytes remaining\n        var rem = s - i;\n\n        if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n          pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n          li = lc_1 = eb = 0, bs = i;\n\n          for (var j = 0; j < 286; ++j) lf[j] = 0;\n\n          for (var j = 0; j < 30; ++j) df[j] = 0;\n        } //  len    dist   chain\n\n\n        var l = 2,\n            d = 0,\n            ch_1 = c,\n            dif = imod - pimod & 32767;\n\n        if (rem > 2 && hv == hsh(i - dif)) {\n          var maxn = Math.min(n, rem) - 1;\n          var maxd = Math.min(32767, i); // max possible length\n          // not capped at dif because decompressors implement \"rolling\" index population\n\n          var ml = Math.min(258, rem);\n\n          while (dif <= maxd && --ch_1 && imod != pimod) {\n            if (dat[i + l] == dat[i + l - dif]) {\n              var nl = 0;\n\n              for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl);\n\n              if (nl > l) {\n                l = nl, d = dif; // break out early when we reach \"nice\" (we are satisfied enough)\n\n                if (nl > maxn) break; // now, find the rarest 2-byte sequence within this\n                // length of literals and search for that instead.\n                // Much faster than just using the start\n\n                var mmd = Math.min(dif, nl - 2);\n                var md = 0;\n\n                for (var j = 0; j < mmd; ++j) {\n                  var ti = i - dif + j & 32767;\n                  var pti = prev[ti];\n                  var cd = ti - pti & 32767;\n                  if (cd > md) md = cd, pimod = ti;\n                }\n              }\n            } // check the previous match\n\n\n            imod = pimod, pimod = prev[imod];\n            dif += imod - pimod & 32767;\n          }\n        } // d will be nonzero only when a match was found\n\n\n        if (d) {\n          // store both dist and len data in one int32\n          // Make sure this is recognized as a len/dist with 28th bit (2^28)\n          syms[li++] = 268435456 | revfl[l] << 18 | revfd[d];\n          var lin = revfl[l] & 31,\n              din = revfd[d] & 31;\n          eb += fleb[lin] + fdeb[din];\n          ++lf[257 + lin];\n          ++df[din];\n          wi = i + l;\n          ++lc_1;\n        } else {\n          syms[li++] = dat[i];\n          ++lf[dat[i]];\n        }\n      }\n    }\n\n    for (i = Math.max(i, wi); i < s; ++i) {\n      syms[li++] = dat[i];\n      ++lf[dat[i]];\n    }\n\n    pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n\n    if (!lst) {\n      st.r = pos & 7 | w[pos / 8 | 0] << 3; // shft(pos) now 1 less if pos & 7 != 0\n\n      pos -= 7;\n      st.h = head, st.p = prev, st.i = i, st.w = wi;\n    }\n  } else {\n    for (var i = st.w || 0; i < s + lst; i += 65535) {\n      // end\n      var e = i + 65535;\n\n      if (e >= s) {\n        // write final block\n        w[pos / 8 | 0] = lst;\n        e = s;\n      }\n\n      pos = wfblk(w, pos + 1, dat.subarray(i, e));\n    }\n\n    st.i = s;\n  }\n\n  return slc(o, 0, pre + shft(pos) + post);\n}; // CRC32 table\n\n\nvar crct = /*#__PURE__*/function () {\n  var t = new Int32Array(256);\n\n  for (var i = 0; i < 256; ++i) {\n    var c = i,\n        k = 9;\n\n    while (--k) c = (c & 1 && -306674912) ^ c >>> 1;\n\n    t[i] = c;\n  }\n\n  return t;\n}(); // CRC32\n\n\nvar crc = function () {\n  var c = -1;\n  return {\n    p: function (d) {\n      // closures have awful performance\n      var cr = c;\n\n      for (var i = 0; i < d.length; ++i) cr = crct[cr & 255 ^ d[i]] ^ cr >>> 8;\n\n      c = cr;\n    },\n    d: function () {\n      return ~c;\n    }\n  };\n}; // Adler32\n\n\nvar adler = function () {\n  var a = 1,\n      b = 0;\n  return {\n    p: function (d) {\n      // closures have awful performance\n      var n = a,\n          m = b;\n      var l = d.length | 0;\n\n      for (var i = 0; i != l;) {\n        var e = Math.min(i + 2655, l);\n\n        for (; i < e; ++i) m += n += d[i];\n\n        n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n      }\n\n      a = n, b = m;\n    },\n    d: function () {\n      a %= 65521, b %= 65521;\n      return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | b >> 8;\n    }\n  };\n};\n\n; // deflate with opts\n\nvar dopt = function (dat, opt, pre, post, st) {\n  if (!st) {\n    st = {\n      l: 1\n    };\n\n    if (opt.dictionary) {\n      var dict = opt.dictionary.subarray(-32768);\n      var newDat = new u8(dict.length + dat.length);\n      newDat.set(dict);\n      newDat.set(dat, dict.length);\n      dat = newDat;\n      st.w = dict.length;\n    }\n  }\n\n  return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20 : 12 + opt.mem, pre, post, st);\n}; // Walmart object spread\n\n\nvar mrg = function (a, b) {\n  var o = {};\n\n  for (var k in a) o[k] = a[k];\n\n  for (var k in b) o[k] = b[k];\n\n  return o;\n}; // worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\n\n\nvar wcln = function (fn, fnStr, td) {\n  var dt = fn();\n  var st = fn.toString();\n  var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n\n  for (var i = 0; i < dt.length; ++i) {\n    var v = dt[i],\n        k = ks[i];\n\n    if (typeof v == 'function') {\n      fnStr += ';' + k + '=';\n      var st_1 = v.toString();\n\n      if (v.prototype) {\n        // for global objects\n        if (st_1.indexOf('[native code]') != -1) {\n          var spInd = st_1.indexOf(' ', 8) + 1;\n          fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n        } else {\n          fnStr += st_1;\n\n          for (var t in v.prototype) fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n        }\n      } else fnStr += st_1;\n    } else td[k] = v;\n  }\n\n  return fnStr;\n};\n\nvar ch = []; // clone bufs\n\nvar cbfs = function (v) {\n  var tl = [];\n\n  for (var k in v) {\n    if (v[k].buffer) {\n      tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n    }\n  }\n\n  return tl;\n}; // use a worker to execute code\n\n\nvar wrkr = function (fns, init, id, cb) {\n  if (!ch[id]) {\n    var fnStr = '',\n        td_1 = {},\n        m = fns.length - 1;\n\n    for (var i = 0; i < m; ++i) fnStr = wcln(fns[i], fnStr, td_1);\n\n    ch[id] = {\n      c: wcln(fns[m], fnStr, td_1),\n      e: td_1\n    };\n  }\n\n  var td = mrg({}, ch[id].e);\n  return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n}; // base async inflate fn\n\n\nvar bInflt = function () {\n  return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt];\n};\n\nvar bDflt = function () {\n  return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf];\n}; // gzip extra\n\n\nvar gze = function () {\n  return [gzh, gzhl, wbytes, crc, crct];\n}; // gunzip extra\n\n\nvar guze = function () {\n  return [gzs, gzl];\n}; // zlib extra\n\n\nvar zle = function () {\n  return [zlh, wbytes, adler];\n}; // unzlib extra\n\n\nvar zule = function () {\n  return [zls];\n}; // post buf\n\n\nvar pbf = function (msg) {\n  return postMessage(msg, [msg.buffer]);\n}; // get opts\n\n\nvar gopt = function (o) {\n  return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n  };\n}; // async helper\n\n\nvar cbify = function (dat, opts, fns, init, id, cb) {\n  var w = wrkr(fns, init, id, function (err, dat) {\n    w.terminate();\n    cb(err, dat);\n  });\n  w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n  return function () {\n    w.terminate();\n  };\n}; // auto stream\n\n\nvar astrm = function (strm) {\n  strm.ondata = function (dat, final) {\n    return postMessage([dat, final], [dat.buffer]);\n  };\n\n  return function (ev) {\n    if (ev.data.length) {\n      strm.push(ev.data[0], ev.data[1]);\n      postMessage([ev.data[0].length]);\n    } else strm.flush();\n  };\n}; // async stream attach\n\n\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n  var t;\n  var w = wrkr(fns, init, id, function (err, dat) {\n    if (err) w.terminate(), strm.ondata.call(strm, err);else if (!Array.isArray(dat)) ext(dat);else if (dat.length == 1) {\n      strm.queuedSize -= dat[0];\n      if (strm.ondrain) strm.ondrain(dat[0]);\n    } else {\n      if (dat[1]) w.terminate();\n      strm.ondata.call(strm, err, dat[0], dat[1]);\n    }\n  });\n  w.postMessage(opts);\n  strm.queuedSize = 0;\n\n  strm.push = function (d, f) {\n    if (!strm.ondata) err(5);\n    if (t) strm.ondata(err(4, 0, 1), null, !!f);\n    strm.queuedSize += d.length;\n    w.postMessage([d, t = f], [d.buffer]);\n  };\n\n  strm.terminate = function () {\n    w.terminate();\n  };\n\n  if (flush) {\n    strm.flush = function () {\n      w.postMessage([]);\n    };\n  }\n}; // read 2 bytes\n\n\nvar b2 = function (d, b) {\n  return d[b] | d[b + 1] << 8;\n}; // read 4 bytes\n\n\nvar b4 = function (d, b) {\n  return (d[b] | d[b + 1] << 8 | d[b + 2] << 16 | d[b + 3] << 24) >>> 0;\n};\n\nvar b8 = function (d, b) {\n  return b4(d, b) + b4(d, b + 4) * 4294967296;\n}; // write bytes\n\n\nvar wbytes = function (d, b, v) {\n  for (; v; ++b) d[b] = v, v >>>= 8;\n}; // gzip header\n\n\nvar gzh = function (c, o) {\n  var fn = o.filename;\n  c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n\n  if (o.mtime != 0) wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n\n  if (fn) {\n    c[3] = 8;\n\n    for (var i = 0; i <= fn.length; ++i) c[i + 10] = fn.charCodeAt(i);\n  }\n}; // gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\n\n\nvar gzs = function (d) {\n  if (d[0] != 31 || d[1] != 139 || d[2] != 8) err(6, 'invalid gzip data');\n  var flg = d[3];\n  var st = 10;\n  if (flg & 4) st += (d[10] | d[11] << 8) + 2;\n\n  for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++]);\n\n  return st + (flg & 2);\n}; // gzip length\n\n\nvar gzl = function (d) {\n  var l = d.length;\n  return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n}; // gzip header length\n\n\nvar gzhl = function (o) {\n  return 10 + (o.filename ? o.filename.length + 1 : 0);\n}; // zlib header\n\n\nvar zlh = function (c, o) {\n  var lv = o.level,\n      fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n  c[0] = 120, c[1] = fl << 6 | (o.dictionary && 32);\n  c[1] |= 31 - (c[0] << 8 | c[1]) % 31;\n\n  if (o.dictionary) {\n    var h = adler();\n    h.p(o.dictionary);\n    wbytes(c, 2, h.d());\n  }\n}; // zlib start\n\n\nvar zls = function (d, dict) {\n  if ((d[0] & 15) != 8 || d[0] >> 4 > 7 || (d[0] << 8 | d[1]) % 31) err(6, 'invalid zlib data');\n  if ((d[1] >> 5 & 1) == +!dict) err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n  return (d[1] >> 3 & 4) + 2;\n};\n\nfunction StrmOpt(opts, cb) {\n  if (typeof opts == 'function') cb = opts, opts = {};\n  this.ondata = cb;\n  return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\n\n\nvar Deflate = /*#__PURE__*/function () {\n  function Deflate(opts, cb) {\n    if (typeof opts == 'function') cb = opts, opts = {};\n    this.ondata = cb;\n    this.o = opts || {};\n    this.s = {\n      l: 0,\n      i: 32768,\n      w: 32768,\n      z: 32768\n    }; // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n    // 98304 = 32768 (lookback) + 65536 (common chunk size)\n\n    this.b = new u8(98304);\n\n    if (this.o.dictionary) {\n      var dict = this.o.dictionary.subarray(-32768);\n      this.b.set(dict, 32768 - dict.length);\n      this.s.i = 32768 - dict.length;\n    }\n  }\n\n  Deflate.prototype.p = function (c, f) {\n    this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n  };\n  /**\n   * Pushes a chunk to be deflated\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  Deflate.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n    if (this.s.l) err(4);\n    var endLen = chunk.length + this.s.z;\n\n    if (endLen > this.b.length) {\n      if (endLen > 2 * this.b.length - 32768) {\n        var newBuf = new u8(endLen & -32768);\n        newBuf.set(this.b.subarray(0, this.s.z));\n        this.b = newBuf;\n      }\n\n      var split = this.b.length - this.s.z;\n      this.b.set(chunk.subarray(0, split), this.s.z);\n      this.s.z = this.b.length;\n      this.p(this.b, false);\n      this.b.set(this.b.subarray(-32768));\n      this.b.set(chunk.subarray(split), 32768);\n      this.s.z = chunk.length - split + 32768;\n      this.s.i = 32766, this.s.w = 32768;\n    } else {\n      this.b.set(chunk, this.s.z);\n      this.s.z += chunk.length;\n    }\n\n    this.s.l = final & 1;\n\n    if (this.s.z > this.s.w + 8191 || final) {\n      this.p(this.b, final || false);\n      this.s.w = this.s.i, this.s.i -= 2;\n    }\n  };\n  /**\n   * Flushes buffered uncompressed data. Useful to immediately retrieve the\n   * deflated output for small inputs.\n   */\n\n\n  Deflate.prototype.flush = function () {\n    if (!this.ondata) err(5);\n    if (this.s.l) err(4);\n    this.p(this.b, false);\n    this.s.w = this.s.i, this.s.i -= 2;\n  };\n\n  return Deflate;\n}();\n\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\n\nvar AsyncDeflate = /*#__PURE__*/function () {\n  function AsyncDeflate(opts, cb) {\n    astrmify([bDflt, function () {\n      return [astrm, Deflate];\n    }], this, StrmOpt.call(this, opts, cb), function (ev) {\n      var strm = new Deflate(ev.data);\n      onmessage = astrm(strm);\n    }, 6, 1);\n  }\n\n  return AsyncDeflate;\n}();\n\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bDflt], function (ev) {\n    return pbf(deflateSync(ev.data[0], ev.data[1]));\n  }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\n\nexport function deflateSync(data, opts) {\n  return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\n\nvar Inflate = /*#__PURE__*/function () {\n  function Inflate(opts, cb) {\n    // no StrmOpt here to avoid adding to workerizer\n    if (typeof opts == 'function') cb = opts, opts = {};\n    this.ondata = cb;\n    var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n    this.s = {\n      i: 0,\n      b: dict ? dict.length : 0\n    };\n    this.o = new u8(32768);\n    this.p = new u8(0);\n    if (dict) this.o.set(dict);\n  }\n\n  Inflate.prototype.e = function (c) {\n    if (!this.ondata) err(5);\n    if (this.d) err(4);\n    if (!this.p.length) this.p = c;else if (c.length) {\n      var n = new u8(this.p.length + c.length);\n      n.set(this.p), n.set(c, this.p.length), this.p = n;\n    }\n  };\n\n  Inflate.prototype.c = function (final) {\n    this.s.i = +(this.d = final || false);\n    var bts = this.s.b;\n    var dt = inflt(this.p, this.s, this.o);\n    this.ondata(slc(dt, bts, this.s.b), this.d);\n    this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n    this.p = slc(this.p, this.s.p / 8 | 0), this.s.p &= 7;\n  };\n  /**\n   * Pushes a chunk to be inflated\n   * @param chunk The chunk to push\n   * @param final Whether this is the final chunk\n   */\n\n\n  Inflate.prototype.push = function (chunk, final) {\n    this.e(chunk), this.c(final);\n  };\n\n  return Inflate;\n}();\n\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\n\nvar AsyncInflate = /*#__PURE__*/function () {\n  function AsyncInflate(opts, cb) {\n    astrmify([bInflt, function () {\n      return [astrm, Inflate];\n    }], this, StrmOpt.call(this, opts, cb), function (ev) {\n      var strm = new Inflate(ev.data);\n      onmessage = astrm(strm);\n    }, 7, 0);\n  }\n\n  return AsyncInflate;\n}();\n\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bInflt], function (ev) {\n    return pbf(inflateSync(ev.data[0], gopt(ev.data[1])));\n  }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\n\nexport function inflateSync(data, opts) {\n  return inflt(data, {\n    i: 2\n  }, opts && opts.out, opts && opts.dictionary);\n} // before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n\n/**\n * Streaming GZIP compression\n */\n\nvar Gzip = /*#__PURE__*/function () {\n  function Gzip(opts, cb) {\n    this.c = crc();\n    this.l = 0;\n    this.v = 1;\n    Deflate.call(this, opts, cb);\n  }\n  /**\n   * Pushes a chunk to be GZIPped\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  Gzip.prototype.push = function (chunk, final) {\n    this.c.p(chunk);\n    this.l += chunk.length;\n    Deflate.prototype.push.call(this, chunk, final);\n  };\n\n  Gzip.prototype.p = function (c, f) {\n    var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n    if (this.v) gzh(raw, this.o), this.v = 0;\n    if (f) wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n    this.ondata(raw, f);\n  };\n  /**\n   * Flushes buffered uncompressed data. Useful to immediately retrieve the\n   * GZIPped output for small inputs.\n   */\n\n\n  Gzip.prototype.flush = function () {\n    Deflate.prototype.flush.call(this);\n  };\n\n  return Gzip;\n}();\n\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\n\nvar AsyncGzip = /*#__PURE__*/function () {\n  function AsyncGzip(opts, cb) {\n    astrmify([bDflt, gze, function () {\n      return [astrm, Deflate, Gzip];\n    }], this, StrmOpt.call(this, opts, cb), function (ev) {\n      var strm = new Gzip(ev.data);\n      onmessage = astrm(strm);\n    }, 8, 1);\n  }\n\n  return AsyncGzip;\n}();\n\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bDflt, gze, function () {\n    return [gzipSync];\n  }], function (ev) {\n    return pbf(gzipSync(ev.data[0], ev.data[1]));\n  }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\n\nexport function gzipSync(data, opts) {\n  if (!opts) opts = {};\n  var c = crc(),\n      l = data.length;\n  c.p(data);\n  var d = dopt(data, opts, gzhl(opts), 8),\n      s = d.length;\n  return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\n\nvar Gunzip = /*#__PURE__*/function () {\n  function Gunzip(opts, cb) {\n    this.v = 1;\n    this.r = 0;\n    Inflate.call(this, opts, cb);\n  }\n  /**\n   * Pushes a chunk to be GUNZIPped\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  Gunzip.prototype.push = function (chunk, final) {\n    Inflate.prototype.e.call(this, chunk);\n    this.r += chunk.length;\n\n    if (this.v) {\n      var p = this.p.subarray(this.v - 1);\n      var s = p.length > 3 ? gzs(p) : 4;\n\n      if (s > p.length) {\n        if (!final) return;\n      } else if (this.v > 1 && this.onmember) {\n        this.onmember(this.r - p.length);\n      }\n\n      this.p = p.subarray(s), this.v = 0;\n    } // necessary to prevent TS from using the closure value\n    // This allows for workerization to function correctly\n\n\n    Inflate.prototype.c.call(this, final); // process concatenated GZIP\n\n    if (this.s.f && !this.s.l && !final) {\n      this.v = shft(this.s.p) + 9;\n      this.s = {\n        i: 0\n      };\n      this.o = new u8(0);\n      this.push(new u8(0), final);\n    }\n  };\n\n  return Gunzip;\n}();\n\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\n\nvar AsyncGunzip = /*#__PURE__*/function () {\n  function AsyncGunzip(opts, cb) {\n    var _this = this;\n\n    astrmify([bInflt, guze, function () {\n      return [astrm, Inflate, Gunzip];\n    }], this, StrmOpt.call(this, opts, cb), function (ev) {\n      var strm = new Gunzip(ev.data);\n\n      strm.onmember = function (offset) {\n        return postMessage(offset);\n      };\n\n      onmessage = astrm(strm);\n    }, 9, 0, function (offset) {\n      return _this.onmember && _this.onmember(offset);\n    });\n  }\n\n  return AsyncGunzip;\n}();\n\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bInflt, guze, function () {\n    return [gunzipSync];\n  }], function (ev) {\n    return pbf(gunzipSync(ev.data[0], ev.data[1]));\n  }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\n\nexport function gunzipSync(data, opts) {\n  var st = gzs(data);\n  if (st + 8 > data.length) err(6, 'invalid gzip data');\n  return inflt(data.subarray(st, -8), {\n    i: 2\n  }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\n\nvar Zlib = /*#__PURE__*/function () {\n  function Zlib(opts, cb) {\n    this.c = adler();\n    this.v = 1;\n    Deflate.call(this, opts, cb);\n  }\n  /**\n   * Pushes a chunk to be zlibbed\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  Zlib.prototype.push = function (chunk, final) {\n    this.c.p(chunk);\n    Deflate.prototype.push.call(this, chunk, final);\n  };\n\n  Zlib.prototype.p = function (c, f) {\n    var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n    if (this.v) zlh(raw, this.o), this.v = 0;\n    if (f) wbytes(raw, raw.length - 4, this.c.d());\n    this.ondata(raw, f);\n  };\n  /**\n   * Flushes buffered uncompressed data. Useful to immediately retrieve the\n   * zlibbed output for small inputs.\n   */\n\n\n  Zlib.prototype.flush = function () {\n    Deflate.prototype.flush.call(this);\n  };\n\n  return Zlib;\n}();\n\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\n\nvar AsyncZlib = /*#__PURE__*/function () {\n  function AsyncZlib(opts, cb) {\n    astrmify([bDflt, zle, function () {\n      return [astrm, Deflate, Zlib];\n    }], this, StrmOpt.call(this, opts, cb), function (ev) {\n      var strm = new Zlib(ev.data);\n      onmessage = astrm(strm);\n    }, 10, 1);\n  }\n\n  return AsyncZlib;\n}();\n\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bDflt, zle, function () {\n    return [zlibSync];\n  }], function (ev) {\n    return pbf(zlibSync(ev.data[0], ev.data[1]));\n  }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\n\nexport function zlibSync(data, opts) {\n  if (!opts) opts = {};\n  var a = adler();\n  a.p(data);\n  var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n  return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\n\nvar Unzlib = /*#__PURE__*/function () {\n  function Unzlib(opts, cb) {\n    Inflate.call(this, opts, cb);\n    this.v = opts && opts.dictionary ? 2 : 1;\n  }\n  /**\n   * Pushes a chunk to be unzlibbed\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  Unzlib.prototype.push = function (chunk, final) {\n    Inflate.prototype.e.call(this, chunk);\n\n    if (this.v) {\n      if (this.p.length < 6 && !final) return;\n      this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n    }\n\n    if (final) {\n      if (this.p.length < 4) err(6, 'invalid zlib data');\n      this.p = this.p.subarray(0, -4);\n    } // necessary to prevent TS from using the closure value\n    // This allows for workerization to function correctly\n\n\n    Inflate.prototype.c.call(this, final);\n  };\n\n  return Unzlib;\n}();\n\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\n\nvar AsyncUnzlib = /*#__PURE__*/function () {\n  function AsyncUnzlib(opts, cb) {\n    astrmify([bInflt, zule, function () {\n      return [astrm, Inflate, Unzlib];\n    }], this, StrmOpt.call(this, opts, cb), function (ev) {\n      var strm = new Unzlib(ev.data);\n      onmessage = astrm(strm);\n    }, 11, 0);\n  }\n\n  return AsyncUnzlib;\n}();\n\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bInflt, zule, function () {\n    return [unzlibSync];\n  }], function (ev) {\n    return pbf(unzlibSync(ev.data[0], gopt(ev.data[1])));\n  }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\n\nexport function unzlibSync(data, opts) {\n  return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), {\n    i: 2\n  }, opts && opts.out, opts && opts.dictionary);\n} // Default algorithm for compression (used because having a known output size allows faster decompression)\n\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\n\nvar Decompress = /*#__PURE__*/function () {\n  function Decompress(opts, cb) {\n    this.o = StrmOpt.call(this, opts, cb) || {};\n    this.G = Gunzip;\n    this.I = Inflate;\n    this.Z = Unzlib;\n  } // init substream\n  // overriden by AsyncDecompress\n\n\n  Decompress.prototype.i = function () {\n    var _this = this;\n\n    this.s.ondata = function (dat, final) {\n      _this.ondata(dat, final);\n    };\n  };\n  /**\n   * Pushes a chunk to be decompressed\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  Decompress.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n\n    if (!this.s) {\n      if (this.p && this.p.length) {\n        var n = new u8(this.p.length + chunk.length);\n        n.set(this.p), n.set(chunk, this.p.length);\n      } else this.p = chunk;\n\n      if (this.p.length > 2) {\n        this.s = this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8 ? new this.G(this.o) : (this.p[0] & 15) != 8 || this.p[0] >> 4 > 7 || (this.p[0] << 8 | this.p[1]) % 31 ? new this.I(this.o) : new this.Z(this.o);\n        this.i();\n        this.s.push(this.p, final);\n        this.p = null;\n      }\n    } else this.s.push(chunk, final);\n  };\n\n  return Decompress;\n}();\n\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\n\nvar AsyncDecompress = /*#__PURE__*/function () {\n  function AsyncDecompress(opts, cb) {\n    Decompress.call(this, opts, cb);\n    this.queuedSize = 0;\n    this.G = AsyncGunzip;\n    this.I = AsyncInflate;\n    this.Z = AsyncUnzlib;\n  }\n\n  AsyncDecompress.prototype.i = function () {\n    var _this = this;\n\n    this.s.ondata = function (err, dat, final) {\n      _this.ondata(err, dat, final);\n    };\n\n    this.s.ondrain = function (size) {\n      _this.queuedSize -= size;\n      if (_this.ondrain) _this.ondrain(size);\n    };\n  };\n  /**\n   * Pushes a chunk to be decompressed\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  AsyncDecompress.prototype.push = function (chunk, final) {\n    this.queuedSize += chunk.length;\n    Decompress.prototype.push.call(this, chunk, final);\n  };\n\n  return AsyncDecompress;\n}();\n\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return data[0] == 31 && data[1] == 139 && data[2] == 8 ? gunzip(data, opts, cb) : (data[0] & 15) != 8 || data[0] >> 4 > 7 || (data[0] << 8 | data[1]) % 31 ? inflate(data, opts, cb) : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\n\nexport function decompressSync(data, opts) {\n  return data[0] == 31 && data[1] == 139 && data[2] == 8 ? gunzipSync(data, opts) : (data[0] & 15) != 8 || data[0] >> 4 > 7 || (data[0] << 8 | data[1]) % 31 ? inflateSync(data, opts) : unzlibSync(data, opts);\n} // flatten a directory structure\n\nvar fltn = function (d, p, t, o) {\n  for (var k in d) {\n    var val = d[k],\n        n = p + k,\n        op = o;\n    if (Array.isArray(val)) op = mrg(o, val[1]), val = val[0];\n    if (val instanceof u8) t[n] = [val, op];else {\n      t[n += '/'] = [new u8(0), op];\n      fltn(val, n, t, o);\n    }\n  }\n}; // text encoder\n\n\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/new TextEncoder(); // text decoder\n\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/new TextDecoder(); // text decoder stream\n\nvar tds = 0;\n\ntry {\n  td.decode(et, {\n    stream: true\n  });\n  tds = 1;\n} catch (e) {} // decode UTF8\n\n\nvar dutf8 = function (d) {\n  for (var r = '', i = 0;;) {\n    var c = d[i++];\n    var eb = (c > 127) + (c > 223) + (c > 239);\n    if (i + eb > d.length) return {\n      s: r,\n      r: slc(d, i - 1)\n    };\n    if (!eb) r += String.fromCharCode(c);else if (eb == 3) {\n      c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | d[i++] & 63) - 65536, r += String.fromCharCode(55296 | c >> 10, 56320 | c & 1023);\n    } else if (eb & 1) r += String.fromCharCode((c & 31) << 6 | d[i++] & 63);else r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | d[i++] & 63);\n  }\n};\n/**\n * Streaming UTF-8 decoding\n */\n\n\nvar DecodeUTF8 = /*#__PURE__*/function () {\n  /**\n   * Creates a UTF-8 decoding stream\n   * @param cb The callback to call whenever data is decoded\n   */\n  function DecodeUTF8(cb) {\n    this.ondata = cb;\n    if (tds) this.t = new TextDecoder();else this.p = et;\n  }\n  /**\n   * Pushes a chunk to be decoded from UTF-8 binary\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  DecodeUTF8.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n    final = !!final;\n\n    if (this.t) {\n      this.ondata(this.t.decode(chunk, {\n        stream: true\n      }), final);\n\n      if (final) {\n        if (this.t.decode().length) err(8);\n        this.t = null;\n      }\n\n      return;\n    }\n\n    if (!this.p) err(4);\n    var dat = new u8(this.p.length + chunk.length);\n    dat.set(this.p);\n    dat.set(chunk, this.p.length);\n\n    var _a = dutf8(dat),\n        s = _a.s,\n        r = _a.r;\n\n    if (final) {\n      if (r.length) err(8);\n      this.p = null;\n    } else this.p = r;\n\n    this.ondata(s, final);\n  };\n\n  return DecodeUTF8;\n}();\n\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\n\nvar EncodeUTF8 = /*#__PURE__*/function () {\n  /**\n   * Creates a UTF-8 decoding stream\n   * @param cb The callback to call whenever data is encoded\n   */\n  function EncodeUTF8(cb) {\n    this.ondata = cb;\n  }\n  /**\n   * Pushes a chunk to be encoded to UTF-8\n   * @param chunk The string data to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  EncodeUTF8.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n    if (this.d) err(4);\n    this.ondata(strToU8(chunk), this.d = final || false);\n  };\n\n  return EncodeUTF8;\n}();\n\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\n\nexport function strToU8(str, latin1) {\n  if (latin1) {\n    var ar_1 = new u8(str.length);\n\n    for (var i = 0; i < str.length; ++i) ar_1[i] = str.charCodeAt(i);\n\n    return ar_1;\n  }\n\n  if (te) return te.encode(str);\n  var l = str.length;\n  var ar = new u8(str.length + (str.length >> 1));\n  var ai = 0;\n\n  var w = function (v) {\n    ar[ai++] = v;\n  };\n\n  for (var i = 0; i < l; ++i) {\n    if (ai + 5 > ar.length) {\n      var n = new u8(ai + 8 + (l - i << 1));\n      n.set(ar);\n      ar = n;\n    }\n\n    var c = str.charCodeAt(i);\n    if (c < 128 || latin1) w(c);else if (c < 2048) w(192 | c >> 6), w(128 | c & 63);else if (c > 55295 && c < 57344) c = 65536 + (c & 1023 << 10) | str.charCodeAt(++i) & 1023, w(240 | c >> 18), w(128 | c >> 12 & 63), w(128 | c >> 6 & 63), w(128 | c & 63);else w(224 | c >> 12), w(128 | c >> 6 & 63), w(128 | c & 63);\n  }\n\n  return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\n\nexport function strFromU8(dat, latin1) {\n  if (latin1) {\n    var r = '';\n\n    for (var i = 0; i < dat.length; i += 16384) r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n\n    return r;\n  } else if (td) {\n    return td.decode(dat);\n  } else {\n    var _a = dutf8(dat),\n        s = _a.s,\n        r = _a.r;\n\n    if (r.length) err(8);\n    return s;\n  }\n}\n; // deflate bit flag\n\nvar dbf = function (l) {\n  return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0;\n}; // skip local zip header\n\n\nvar slzh = function (d, b) {\n  return b + 30 + b2(d, b + 26) + b2(d, b + 28);\n}; // read zip header\n\n\nvar zh = function (d, b, z) {\n  var fnl = b2(d, b + 28),\n      fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)),\n      es = b + 46 + fnl,\n      bs = b4(d, b + 20);\n\n  var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)],\n      sc = _a[0],\n      su = _a[1],\n      off = _a[2];\n\n  return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n}; // read zip64 extra field\n\n\nvar z64e = function (d, b) {\n  for (; b2(d, b) != 1; b += 4 + b2(d, b + 2));\n\n  return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n}; // extra field length\n\n\nvar exfl = function (ex) {\n  var le = 0;\n\n  if (ex) {\n    for (var k in ex) {\n      var l = ex[k].length;\n      if (l > 65535) err(9);\n      le += l + 4;\n    }\n  }\n\n  return le;\n}; // write zip header\n\n\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n  var fl = fn.length,\n      ex = f.extra,\n      col = co && co.length;\n  var exl = exfl(ex);\n  wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n  if (ce != null) d[b++] = 20, d[b++] = f.os;\n  d[b] = 20, b += 2; // spec compliance? what's that?\n\n  d[b++] = f.flag << 1 | (c < 0 && 8), d[b++] = u && 8;\n  d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n  var dt = new Date(f.mtime == null ? Date.now() : f.mtime),\n      y = dt.getFullYear() - 1980;\n  if (y < 0 || y > 119) err(10);\n  wbytes(d, b, y << 25 | dt.getMonth() + 1 << 21 | dt.getDate() << 16 | dt.getHours() << 11 | dt.getMinutes() << 5 | dt.getSeconds() >> 1), b += 4;\n\n  if (c != -1) {\n    wbytes(d, b, f.crc);\n    wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n    wbytes(d, b + 8, f.size);\n  }\n\n  wbytes(d, b + 12, fl);\n  wbytes(d, b + 14, exl), b += 16;\n\n  if (ce != null) {\n    wbytes(d, b, col);\n    wbytes(d, b + 6, f.attrs);\n    wbytes(d, b + 10, ce), b += 14;\n  }\n\n  d.set(fn, b);\n  b += fl;\n\n  if (exl) {\n    for (var k in ex) {\n      var exf = ex[k],\n          l = exf.length;\n      wbytes(d, b, +k);\n      wbytes(d, b + 2, l);\n      d.set(exf, b + 4), b += 4 + l;\n    }\n  }\n\n  if (col) d.set(co, b), b += col;\n  return b;\n}; // write zip footer (end of central directory)\n\n\nvar wzf = function (o, b, c, d, e) {\n  wbytes(o, b, 0x6054B50); // skip disk\n\n  wbytes(o, b + 8, c);\n  wbytes(o, b + 10, c);\n  wbytes(o, b + 12, d);\n  wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\n\n\nvar ZipPassThrough = /*#__PURE__*/function () {\n  /**\n   * Creates a pass-through stream that can be added to ZIP archives\n   * @param filename The filename to associate with this data stream\n   */\n  function ZipPassThrough(filename) {\n    this.filename = filename;\n    this.c = crc();\n    this.size = 0;\n    this.compression = 0;\n  }\n  /**\n   * Processes a chunk and pushes to the output stream. You can override this\n   * method in a subclass for custom behavior, but by default this passes\n   * the data through. You must call this.ondata(err, chunk, final) at some\n   * point in this method.\n   * @param chunk The chunk to process\n   * @param final Whether this is the last chunk\n   */\n\n\n  ZipPassThrough.prototype.process = function (chunk, final) {\n    this.ondata(null, chunk, final);\n  };\n  /**\n   * Pushes a chunk to be added. If you are subclassing this with a custom\n   * compression algorithm, note that you must push data from the source\n   * file only, pre-compression.\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  ZipPassThrough.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n    this.c.p(chunk);\n    this.size += chunk.length;\n    if (final) this.crc = this.c.d();\n    this.process(chunk, final || false);\n  };\n\n  return ZipPassThrough;\n}();\n\nexport { ZipPassThrough }; // I don't extend because TypeScript extension adds 1kB of runtime bloat\n\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\n\nvar ZipDeflate = /*#__PURE__*/function () {\n  /**\n   * Creates a DEFLATE stream that can be added to ZIP archives\n   * @param filename The filename to associate with this data stream\n   * @param opts The compression options\n   */\n  function ZipDeflate(filename, opts) {\n    var _this = this;\n\n    if (!opts) opts = {};\n    ZipPassThrough.call(this, filename);\n    this.d = new Deflate(opts, function (dat, final) {\n      _this.ondata(null, dat, final);\n    });\n    this.compression = 8;\n    this.flag = dbf(opts.level);\n  }\n\n  ZipDeflate.prototype.process = function (chunk, final) {\n    try {\n      this.d.push(chunk, final);\n    } catch (e) {\n      this.ondata(e, null, final);\n    }\n  };\n  /**\n   * Pushes a chunk to be deflated\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  ZipDeflate.prototype.push = function (chunk, final) {\n    ZipPassThrough.prototype.push.call(this, chunk, final);\n  };\n\n  return ZipDeflate;\n}();\n\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\n\nvar AsyncZipDeflate = /*#__PURE__*/function () {\n  /**\n   * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n   * @param filename The filename to associate with this data stream\n   * @param opts The compression options\n   */\n  function AsyncZipDeflate(filename, opts) {\n    var _this = this;\n\n    if (!opts) opts = {};\n    ZipPassThrough.call(this, filename);\n    this.d = new AsyncDeflate(opts, function (err, dat, final) {\n      _this.ondata(err, dat, final);\n    });\n    this.compression = 8;\n    this.flag = dbf(opts.level);\n    this.terminate = this.d.terminate;\n  }\n\n  AsyncZipDeflate.prototype.process = function (chunk, final) {\n    this.d.push(chunk, final);\n  };\n  /**\n   * Pushes a chunk to be deflated\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  AsyncZipDeflate.prototype.push = function (chunk, final) {\n    ZipPassThrough.prototype.push.call(this, chunk, final);\n  };\n\n  return AsyncZipDeflate;\n}();\n\nexport { AsyncZipDeflate }; // TODO: Better tree shaking\n\n/**\n * A zippable archive to which files can incrementally be added\n */\n\nvar Zip = /*#__PURE__*/function () {\n  /**\n   * Creates an empty ZIP archive to which files can be added\n   * @param cb The callback to call whenever data for the generated ZIP archive\n   *           is available\n   */\n  function Zip(cb) {\n    this.ondata = cb;\n    this.u = [];\n    this.d = 1;\n  }\n  /**\n   * Adds a file to the ZIP archive\n   * @param file The file stream to add\n   */\n\n\n  Zip.prototype.add = function (file) {\n    var _this = this;\n\n    if (!this.ondata) err(5); // finishing or finished\n\n    if (this.d & 2) this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);else {\n      var f = strToU8(file.filename),\n          fl_1 = f.length;\n      var com = file.comment,\n          o = com && strToU8(com);\n      var u = fl_1 != file.filename.length || o && com.length != o.length;\n      var hl_1 = fl_1 + exfl(file.extra) + 30;\n      if (fl_1 > 65535) this.ondata(err(11, 0, 1), null, false);\n      var header = new u8(hl_1);\n      wzh(header, 0, file, f, u, -1);\n      var chks_1 = [header];\n\n      var pAll_1 = function () {\n        for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n          var chk = chks_2[_i];\n\n          _this.ondata(null, chk, false);\n        }\n\n        chks_1 = [];\n      };\n\n      var tr_1 = this.d;\n      this.d = 0;\n      var ind_1 = this.u.length;\n      var uf_1 = mrg(file, {\n        f: f,\n        u: u,\n        o: o,\n        t: function () {\n          if (file.terminate) file.terminate();\n        },\n        r: function () {\n          pAll_1();\n\n          if (tr_1) {\n            var nxt = _this.u[ind_1 + 1];\n            if (nxt) nxt.r();else _this.d = 1;\n          }\n\n          tr_1 = 1;\n        }\n      });\n      var cl_1 = 0;\n\n      file.ondata = function (err, dat, final) {\n        if (err) {\n          _this.ondata(err, dat, final);\n\n          _this.terminate();\n        } else {\n          cl_1 += dat.length;\n          chks_1.push(dat);\n\n          if (final) {\n            var dd = new u8(16);\n            wbytes(dd, 0, 0x8074B50);\n            wbytes(dd, 4, file.crc);\n            wbytes(dd, 8, cl_1);\n            wbytes(dd, 12, file.size);\n            chks_1.push(dd);\n            uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n            if (tr_1) uf_1.r();\n            tr_1 = 1;\n          } else if (tr_1) pAll_1();\n        }\n      };\n\n      this.u.push(uf_1);\n    }\n  };\n  /**\n   * Ends the process of adding files and prepares to emit the final chunks.\n   * This *must* be called after adding all desired files for the resulting\n   * ZIP file to work properly.\n   */\n\n\n  Zip.prototype.end = function () {\n    var _this = this;\n\n    if (this.d & 2) {\n      this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n      return;\n    }\n\n    if (this.d) this.e();else this.u.push({\n      r: function () {\n        if (!(_this.d & 1)) return;\n\n        _this.u.splice(-1, 1);\n\n        _this.e();\n      },\n      t: function () {}\n    });\n    this.d = 3;\n  };\n\n  Zip.prototype.e = function () {\n    var bt = 0,\n        l = 0,\n        tl = 0;\n\n    for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n      var f = _a[_i];\n      tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n    }\n\n    var out = new u8(tl + 22);\n\n    for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n      var f = _c[_b];\n      wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n      bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n    }\n\n    wzf(out, bt, this.u.length, tl, l);\n    this.ondata(null, out, true);\n    this.d = 2;\n  };\n  /**\n   * A method to terminate any internal workers used by the stream. Subsequent\n   * calls to add() will fail.\n   */\n\n\n  Zip.prototype.terminate = function () {\n    for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n      var f = _a[_i];\n      f.t();\n    }\n\n    this.d = 2;\n  };\n\n  return Zip;\n}();\n\nexport { Zip };\nexport function zip(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  var r = {};\n  fltn(data, '', r, opts);\n  var k = Object.keys(r);\n  var lft = k.length,\n      o = 0,\n      tot = 0;\n  var slft = lft,\n      files = new Array(lft);\n  var term = [];\n\n  var tAll = function () {\n    for (var i = 0; i < term.length; ++i) term[i]();\n  };\n\n  var cbd = function (a, b) {\n    mt(function () {\n      cb(a, b);\n    });\n  };\n\n  mt(function () {\n    cbd = cb;\n  });\n\n  var cbf = function () {\n    var out = new u8(tot + 22),\n        oe = o,\n        cdl = tot - o;\n    tot = 0;\n\n    for (var i = 0; i < slft; ++i) {\n      var f = files[i];\n\n      try {\n        var l = f.c.length;\n        wzh(out, tot, f, f.f, f.u, l);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        var loc = tot + badd;\n        out.set(f.c, loc);\n        wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n      } catch (e) {\n        return cbd(e, null);\n      }\n    }\n\n    wzf(out, o, files.length, cdl, oe);\n    cbd(null, out);\n  };\n\n  if (!lft) cbf();\n\n  var _loop_1 = function (i) {\n    var fn = k[i];\n    var _a = r[fn],\n        file = _a[0],\n        p = _a[1];\n    var c = crc(),\n        size = file.length;\n    c.p(file);\n    var f = strToU8(fn),\n        s = f.length;\n    var com = p.comment,\n        m = com && strToU8(com),\n        ms = m && m.length;\n    var exl = exfl(p.extra);\n    var compression = p.level == 0 ? 0 : 8;\n\n    var cbl = function (e, d) {\n      if (e) {\n        tAll();\n        cbd(e, null);\n      } else {\n        var l = d.length;\n        files[i] = mrg(p, {\n          size: size,\n          crc: c.d(),\n          c: d,\n          f: f,\n          m: m,\n          u: s != fn.length || m && com.length != ms,\n          compression: compression\n        });\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n        if (! --lft) cbf();\n      }\n    };\n\n    if (s > 65535) cbl(err(11, 0, 1), null);\n    if (!compression) cbl(null, file);else if (size < 160000) {\n      try {\n        cbl(null, deflateSync(file, p));\n      } catch (e) {\n        cbl(e, null);\n      }\n    } else term.push(deflate(file, p, cbl));\n  }; // Cannot use lft because it can decrease\n\n\n  for (var i = 0; i < slft; ++i) {\n    _loop_1(i);\n  }\n\n  return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\n\nexport function zipSync(data, opts) {\n  if (!opts) opts = {};\n  var r = {};\n  var files = [];\n  fltn(data, '', r, opts);\n  var o = 0;\n  var tot = 0;\n\n  for (var fn in r) {\n    var _a = r[fn],\n        file = _a[0],\n        p = _a[1];\n    var compression = p.level == 0 ? 0 : 8;\n    var f = strToU8(fn),\n        s = f.length;\n    var com = p.comment,\n        m = com && strToU8(com),\n        ms = m && m.length;\n    var exl = exfl(p.extra);\n    if (s > 65535) err(11);\n    var d = compression ? deflateSync(file, p) : file,\n        l = d.length;\n    var c = crc();\n    c.p(file);\n    files.push(mrg(p, {\n      size: file.length,\n      crc: c.d(),\n      c: d,\n      f: f,\n      m: m,\n      u: s != fn.length || m && com.length != ms,\n      o: o,\n      compression: compression\n    }));\n    o += 30 + s + exl + l;\n    tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n  }\n\n  var out = new u8(tot + 22),\n      oe = o,\n      cdl = tot - o;\n\n  for (var i = 0; i < files.length; ++i) {\n    var f = files[i];\n    wzh(out, f.o, f, f.f, f.u, f.c.length);\n    var badd = 30 + f.f.length + exfl(f.extra);\n    out.set(f.c, f.o + badd);\n    wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n  }\n\n  wzf(out, o, files.length, cdl, oe);\n  return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\n\nvar UnzipPassThrough = /*#__PURE__*/function () {\n  function UnzipPassThrough() {}\n\n  UnzipPassThrough.prototype.push = function (data, final) {\n    this.ondata(null, data, final);\n  };\n\n  UnzipPassThrough.compression = 0;\n  return UnzipPassThrough;\n}();\n\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\n\nvar UnzipInflate = /*#__PURE__*/function () {\n  /**\n   * Creates a DEFLATE decompression that can be used in ZIP archives\n   */\n  function UnzipInflate() {\n    var _this = this;\n\n    this.i = new Inflate(function (dat, final) {\n      _this.ondata(null, dat, final);\n    });\n  }\n\n  UnzipInflate.prototype.push = function (data, final) {\n    try {\n      this.i.push(data, final);\n    } catch (e) {\n      this.ondata(e, null, final);\n    }\n  };\n\n  UnzipInflate.compression = 8;\n  return UnzipInflate;\n}();\n\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\n\nvar AsyncUnzipInflate = /*#__PURE__*/function () {\n  /**\n   * Creates a DEFLATE decompression that can be used in ZIP archives\n   */\n  function AsyncUnzipInflate(_, sz) {\n    var _this = this;\n\n    if (sz < 320000) {\n      this.i = new Inflate(function (dat, final) {\n        _this.ondata(null, dat, final);\n      });\n    } else {\n      this.i = new AsyncInflate(function (err, dat, final) {\n        _this.ondata(err, dat, final);\n      });\n      this.terminate = this.i.terminate;\n    }\n  }\n\n  AsyncUnzipInflate.prototype.push = function (data, final) {\n    if (this.i.terminate) data = slc(data, 0);\n    this.i.push(data, final);\n  };\n\n  AsyncUnzipInflate.compression = 8;\n  return AsyncUnzipInflate;\n}();\n\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\n\nvar Unzip = /*#__PURE__*/function () {\n  /**\n   * Creates a ZIP decompression stream\n   * @param cb The callback to call whenever a file in the ZIP archive is found\n   */\n  function Unzip(cb) {\n    this.onfile = cb;\n    this.k = [];\n    this.o = {\n      0: UnzipPassThrough\n    };\n    this.p = et;\n  }\n  /**\n   * Pushes a chunk to be unzipped\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n\n\n  Unzip.prototype.push = function (chunk, final) {\n    var _this = this;\n\n    if (!this.onfile) err(5);\n    if (!this.p) err(4);\n\n    if (this.c > 0) {\n      var len = Math.min(this.c, chunk.length);\n      var toAdd = chunk.subarray(0, len);\n      this.c -= len;\n      if (this.d) this.d.push(toAdd, !this.c);else this.k[0].push(toAdd);\n      chunk = chunk.subarray(len);\n      if (chunk.length) return this.push(chunk, final);\n    } else {\n      var f = 0,\n          i = 0,\n          is = void 0,\n          buf = void 0;\n      if (!this.p.length) buf = chunk;else if (!chunk.length) buf = this.p;else {\n        buf = new u8(this.p.length + chunk.length);\n        buf.set(this.p), buf.set(chunk, this.p.length);\n      }\n      var l = buf.length,\n          oc = this.c,\n          add = oc && this.d;\n\n      var _loop_2 = function () {\n        var _a;\n\n        var sig = b4(buf, i);\n\n        if (sig == 0x4034B50) {\n          f = 1, is = i;\n          this_1.d = null;\n          this_1.c = 0;\n          var bf = b2(buf, i + 6),\n              cmp_1 = b2(buf, i + 8),\n              u = bf & 2048,\n              dd = bf & 8,\n              fnl = b2(buf, i + 26),\n              es = b2(buf, i + 28);\n\n          if (l > i + 30 + fnl + es) {\n            var chks_3 = [];\n            this_1.k.unshift(chks_3);\n            f = 2;\n            var sc_1 = b4(buf, i + 18),\n                su_1 = b4(buf, i + 22);\n            var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n\n            if (sc_1 == 4294967295) {\n              _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n            } else if (dd) sc_1 = -1;\n\n            i += es;\n            this_1.c = sc_1;\n            var d_1;\n            var file_1 = {\n              name: fn_1,\n              compression: cmp_1,\n              start: function () {\n                if (!file_1.ondata) err(5);\n                if (!sc_1) file_1.ondata(null, et, true);else {\n                  var ctr = _this.o[cmp_1];\n                  if (!ctr) file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                  d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n\n                  d_1.ondata = function (err, dat, final) {\n                    file_1.ondata(err, dat, final);\n                  };\n\n                  for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                    var dat = chks_4[_i];\n                    d_1.push(dat, false);\n                  }\n\n                  if (_this.k[0] == chks_3 && _this.c) _this.d = d_1;else d_1.push(et, true);\n                }\n              },\n              terminate: function () {\n                if (d_1 && d_1.terminate) d_1.terminate();\n              }\n            };\n            if (sc_1 >= 0) file_1.size = sc_1, file_1.originalSize = su_1;\n            this_1.onfile(file_1);\n          }\n\n          return \"break\";\n        } else if (oc) {\n          if (sig == 0x8074B50) {\n            is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n            return \"break\";\n          } else if (sig == 0x2014B50) {\n            is = i -= 4, f = 3, this_1.c = 0;\n            return \"break\";\n          }\n        }\n      };\n\n      var this_1 = this;\n\n      for (; i < l - 4; ++i) {\n        var state_1 = _loop_2();\n\n        if (state_1 === \"break\") break;\n      }\n\n      this.p = et;\n\n      if (oc < 0) {\n        var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n        if (add) add.push(dat, !!f);else this.k[+(f == 2)].push(dat);\n      }\n\n      if (f & 2) return this.push(buf.subarray(i), final);\n      this.p = buf.subarray(i);\n    }\n\n    if (final) {\n      if (this.c) err(13);\n      this.p = null;\n    }\n  };\n  /**\n   * Registers a decoder with the stream, allowing for files compressed with\n   * the compression type provided to be expanded correctly\n   * @param decoder The decoder constructor\n   */\n\n\n  Unzip.prototype.register = function (decoder) {\n    this.o[decoder.compression] = decoder;\n  };\n\n  return Unzip;\n}();\n\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) {\n  fn();\n};\nexport function unzip(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  var term = [];\n\n  var tAll = function () {\n    for (var i = 0; i < term.length; ++i) term[i]();\n  };\n\n  var files = {};\n\n  var cbd = function (a, b) {\n    mt(function () {\n      cb(a, b);\n    });\n  };\n\n  mt(function () {\n    cbd = cb;\n  });\n  var e = data.length - 22;\n\n  for (; b4(data, e) != 0x6054B50; --e) {\n    if (!e || data.length - e > 65558) {\n      cbd(err(13, 0, 1), null);\n      return tAll;\n    }\n  }\n\n  ;\n  var lft = b2(data, e + 8);\n\n  if (lft) {\n    var c = lft;\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n\n    if (z) {\n      var ze = b4(data, e - 12);\n      z = b4(data, ze) == 0x6064B50;\n\n      if (z) {\n        c = lft = b4(data, ze + 32);\n        o = b4(data, ze + 48);\n      }\n    }\n\n    var fltr = opts && opts.filter;\n\n    var _loop_3 = function (i) {\n      var _a = zh(data, o, z),\n          c_1 = _a[0],\n          sc = _a[1],\n          su = _a[2],\n          fn = _a[3],\n          no = _a[4],\n          off = _a[5],\n          b = slzh(data, off);\n\n      o = no;\n\n      var cbl = function (e, d) {\n        if (e) {\n          tAll();\n          cbd(e, null);\n        } else {\n          if (d) files[fn] = d;\n          if (! --lft) cbd(null, files);\n        }\n      };\n\n      if (!fltr || fltr({\n        name: fn,\n        size: sc,\n        originalSize: su,\n        compression: c_1\n      })) {\n        if (!c_1) cbl(null, slc(data, b, b + sc));else if (c_1 == 8) {\n          var infl = data.subarray(b, b + sc); // Synchronously decompress under 512KB, or barely-compressed data\n\n          if (su < 524288 || sc > 0.8 * su) {\n            try {\n              cbl(null, inflateSync(infl, {\n                out: new u8(su)\n              }));\n            } catch (e) {\n              cbl(e, null);\n            }\n          } else term.push(inflate(infl, {\n            size: su\n          }, cbl));\n        } else cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n      } else cbl(null, null);\n    };\n\n    for (var i = 0; i < c; ++i) {\n      _loop_3(i);\n    }\n  } else cbd(null, {});\n\n  return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\n\nexport function unzipSync(data, opts) {\n  var files = {};\n  var e = data.length - 22;\n\n  for (; b4(data, e) != 0x6054B50; --e) {\n    if (!e || data.length - e > 65558) err(13);\n  }\n\n  ;\n  var c = b2(data, e + 8);\n  if (!c) return {};\n  var o = b4(data, e + 16);\n  var z = o == 4294967295 || c == 65535;\n\n  if (z) {\n    var ze = b4(data, e - 12);\n    z = b4(data, ze) == 0x6064B50;\n\n    if (z) {\n      c = b4(data, ze + 32);\n      o = b4(data, ze + 48);\n    }\n  }\n\n  var fltr = opts && opts.filter;\n\n  for (var i = 0; i < c; ++i) {\n    var _a = zh(data, o, z),\n        c_2 = _a[0],\n        sc = _a[1],\n        su = _a[2],\n        fn = _a[3],\n        no = _a[4],\n        off = _a[5],\n        b = slzh(data, off);\n\n    o = no;\n\n    if (!fltr || fltr({\n      name: fn,\n      size: sc,\n      originalSize: su,\n      compression: c_2\n    })) {\n      if (!c_2) files[fn] = slc(data, b, b + sc);else if (c_2 == 8) files[fn] = inflateSync(data.subarray(b, b + sc), {\n        out: new u8(su)\n      });else err(14, 'unknown compression type ' + c_2);\n    }\n  }\n\n  return files;\n}","map":{"version":3,"sources":["C:/Users/carli/OneDrive/Escritorio/Dev/astrid/InteriorDesing/node_modules/fflate/esm/browser.js"],"names":["ch2","wk","c","id","msg","transfer","cb","w","Worker","URL","createObjectURL","Blob","type","onmessage","e","d","data","ed","$e$","err","Error","stack","postMessage","u8","Uint8Array","u16","Uint16Array","i32","Int32Array","fleb","fdeb","clim","freb","eb","start","b","i","r","j","_a","fl","revfl","_b","fd","revfd","rev","x","hMap","cd","mb","s","length","l","le","co","rvb","sv","r_1","v","m","flt","fdt","flm","flrm","fdm","fdrm","max","a","bits","p","o","bits16","shft","slc","subarray","FlateErrorCode","UnexpectedEOF","InvalidBlockType","InvalidLengthLiteral","InvalidDistance","StreamFinished","NoStreamHandler","InvalidHeader","NoCallback","InvalidUTF8","ExtraFieldTooLong","InvalidDate","FilenameTooLong","StreamFinishing","InvalidZipData","UnknownCompressionMethod","ec","ind","nt","code","captureStackTrace","inflt","dat","st","buf","dict","sl","dl","f","noBuf","resize","noSt","cbuf","bl","nbuf","Math","set","final","pos","bt","lm","dm","lbt","dbt","n","tbts","t","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","lt","dt","lms","dms","lpos","sym","add","dsym","end","shift","dend","min","wbits","wbits16","hTree","push","t2","slice","et","sort","i0","i1","i2","maxSym","tr","mbt","ln","lft","cst","i2_1","i2_2","i2_3","lc","cl","cli","cln","cls","clen","cf","wfblk","out","wblk","syms","lf","df","li","bs","dlt","mlb","ddt","mdb","_c","lclt","nlc","_d","lcdt","ndc","lcfreq","_e","lct","mlcb","nlcc","flen","ftlen","dtlen","ll","llm","lcts","it","clct","len","dst","deo","dflt","lvl","plvl","pre","post","z","ceil","lst","opt","msk_1","prev","head","h","bs1_1","bs2_1","hsh","lc_1","wi","hv","imod","pimod","rem","ch_1","dif","maxn","maxd","ml","nl","mmd","md","ti","pti","lin","din","crct","k","crc","cr","adler","dopt","dictionary","newDat","level","mem","log","mrg","wcln","fn","fnStr","td","toString","ks","indexOf","lastIndexOf","replace","split","st_1","prototype","spInd","ch","cbfs","buffer","constructor","wrkr","fns","init","td_1","bInflt","inflateSync","pbf","gopt","bDflt","deflateSync","gze","gzh","gzhl","wbytes","guze","gzs","gzl","zle","zlh","zule","zls","size","cbify","opts","terminate","consume","astrm","strm","ondata","ev","flush","astrmify","ext","call","Array","isArray","queuedSize","ondrain","b2","b4","b8","filename","mtime","floor","Date","now","charCodeAt","flg","zs","lv","StrmOpt","Deflate","chunk","endLen","newBuf","AsyncDeflate","deflate","Inflate","bts","AsyncInflate","inflate","Gzip","raw","AsyncGzip","gzip","gzipSync","Gunzip","onmember","AsyncGunzip","_this","offset","gunzip","gunzipSync","Zlib","AsyncZlib","zlib","zlibSync","Unzlib","AsyncUnzlib","unzlib","unzlibSync","compress","AsyncCompress","compressSync","Compress","Decompress","G","I","Z","AsyncDecompress","decompress","decompressSync","fltn","val","op","te","TextEncoder","TextDecoder","tds","decode","stream","dutf8","String","fromCharCode","DecodeUTF8","EncodeUTF8","strToU8","str","latin1","ar_1","encode","ar","ai","strFromU8","apply","dbf","slzh","zh","fnl","es","z64e","sc","su","off","exfl","ex","wzh","u","ce","extra","col","exl","os","flag","compression","y","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","attrs","exf","wzf","ZipPassThrough","process","ZipDeflate","AsyncZipDeflate","Zip","file","fl_1","com","comment","hl_1","header","chks_1","pAll_1","_i","chks_2","chk","tr_1","ind_1","uf_1","nxt","cl_1","dd","splice","zip","Object","keys","tot","slft","files","term","tAll","cbd","mt","cbf","oe","cdl","badd","loc","_loop_1","ms","cbl","zipSync","UnzipPassThrough","UnzipInflate","AsyncUnzipInflate","_","sz","Unzip","onfile","toAdd","is","oc","_loop_2","sig","this_1","bf","cmp_1","chks_3","unshift","sc_1","su_1","fn_1","d_1","file_1","name","ctr","chks_4","originalSize","state_1","register","decoder","queueMicrotask","setTimeout","unzip","ze","fltr","filter","_loop_3","c_1","no","infl","unzipSync","c_2"],"mappings":"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","sourcesContent":["// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n"]},"metadata":{},"sourceType":"module"}